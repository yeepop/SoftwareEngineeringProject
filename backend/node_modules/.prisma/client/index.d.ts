
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model AnimalListing
 * 
 */
export type AnimalListing = $Result.DefaultSelection<Prisma.$AnimalListingPayload>
/**
 * Model AdoptionApplication
 * 
 */
export type AdoptionApplication = $Result.DefaultSelection<Prisma.$AdoptionApplicationPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model SupportConversation
 * 
 */
export type SupportConversation = $Result.DefaultSelection<Prisma.$SupportConversationPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.animalListing`: Exposes CRUD operations for the **AnimalListing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AnimalListings
    * const animalListings = await prisma.animalListing.findMany()
    * ```
    */
  get animalListing(): Prisma.AnimalListingDelegate<ExtArgs>;

  /**
   * `prisma.adoptionApplication`: Exposes CRUD operations for the **AdoptionApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdoptionApplications
    * const adoptionApplications = await prisma.adoptionApplication.findMany()
    * ```
    */
  get adoptionApplication(): Prisma.AdoptionApplicationDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;

  /**
   * `prisma.supportConversation`: Exposes CRUD operations for the **SupportConversation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupportConversations
    * const supportConversations = await prisma.supportConversation.findMany()
    * ```
    */
  get supportConversation(): Prisma.SupportConversationDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    AnimalListing: 'AnimalListing',
    AdoptionApplication: 'AdoptionApplication',
    AuditLog: 'AuditLog',
    SupportConversation: 'SupportConversation'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "animalListing" | "adoptionApplication" | "auditLog" | "supportConversation"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      AnimalListing: {
        payload: Prisma.$AnimalListingPayload<ExtArgs>
        fields: Prisma.AnimalListingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnimalListingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnimalListingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          findFirst: {
            args: Prisma.AnimalListingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnimalListingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          findMany: {
            args: Prisma.AnimalListingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>[]
          }
          create: {
            args: Prisma.AnimalListingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          createMany: {
            args: Prisma.AnimalListingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AnimalListingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>[]
          }
          delete: {
            args: Prisma.AnimalListingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          update: {
            args: Prisma.AnimalListingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          deleteMany: {
            args: Prisma.AnimalListingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AnimalListingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AnimalListingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalListingPayload>
          }
          aggregate: {
            args: Prisma.AnimalListingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimalListing>
          }
          groupBy: {
            args: Prisma.AnimalListingGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnimalListingGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnimalListingCountArgs<ExtArgs>
            result: $Utils.Optional<AnimalListingCountAggregateOutputType> | number
          }
        }
      }
      AdoptionApplication: {
        payload: Prisma.$AdoptionApplicationPayload<ExtArgs>
        fields: Prisma.AdoptionApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdoptionApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdoptionApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          findFirst: {
            args: Prisma.AdoptionApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdoptionApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          findMany: {
            args: Prisma.AdoptionApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>[]
          }
          create: {
            args: Prisma.AdoptionApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          createMany: {
            args: Prisma.AdoptionApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdoptionApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>[]
          }
          delete: {
            args: Prisma.AdoptionApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          update: {
            args: Prisma.AdoptionApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          deleteMany: {
            args: Prisma.AdoptionApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdoptionApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AdoptionApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptionApplicationPayload>
          }
          aggregate: {
            args: Prisma.AdoptionApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdoptionApplication>
          }
          groupBy: {
            args: Prisma.AdoptionApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdoptionApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdoptionApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<AdoptionApplicationCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      SupportConversation: {
        payload: Prisma.$SupportConversationPayload<ExtArgs>
        fields: Prisma.SupportConversationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupportConversationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupportConversationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          findFirst: {
            args: Prisma.SupportConversationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupportConversationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          findMany: {
            args: Prisma.SupportConversationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>[]
          }
          create: {
            args: Prisma.SupportConversationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          createMany: {
            args: Prisma.SupportConversationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupportConversationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>[]
          }
          delete: {
            args: Prisma.SupportConversationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          update: {
            args: Prisma.SupportConversationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          deleteMany: {
            args: Prisma.SupportConversationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupportConversationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SupportConversationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportConversationPayload>
          }
          aggregate: {
            args: Prisma.SupportConversationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupportConversation>
          }
          groupBy: {
            args: Prisma.SupportConversationGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupportConversationGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupportConversationCountArgs<ExtArgs>
            result: $Utils.Optional<SupportConversationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    animalListings: number
    adoptionApplications: number
    reviewedApplications: number
    auditLogs: number
    supportConversations: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animalListings?: boolean | UserCountOutputTypeCountAnimalListingsArgs
    adoptionApplications?: boolean | UserCountOutputTypeCountAdoptionApplicationsArgs
    reviewedApplications?: boolean | UserCountOutputTypeCountReviewedApplicationsArgs
    auditLogs?: boolean | UserCountOutputTypeCountAuditLogsArgs
    supportConversations?: boolean | UserCountOutputTypeCountSupportConversationsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAnimalListingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnimalListingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAdoptionApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdoptionApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdoptionApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSupportConversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportConversationWhereInput
  }


  /**
   * Count Type AnimalListingCountOutputType
   */

  export type AnimalListingCountOutputType = {
    applications: number
  }

  export type AnimalListingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | AnimalListingCountOutputTypeCountApplicationsArgs
  }

  // Custom InputTypes
  /**
   * AnimalListingCountOutputType without action
   */
  export type AnimalListingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListingCountOutputType
     */
    select?: AnimalListingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AnimalListingCountOutputType without action
   */
  export type AnimalListingCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdoptionApplicationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    passwordHash: string | null
    role: string | null
    profileCompleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    passwordHash: string | null
    role: string | null
    profileCompleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    passwordHash: number
    role: number
    profileCompleted: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    profileCompleted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    profileCompleted?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    passwordHash?: true
    role?: true
    profileCompleted?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    email: string
    passwordHash: string | null
    role: string
    profileCompleted: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    profileCompleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    animalListings?: boolean | User$animalListingsArgs<ExtArgs>
    adoptionApplications?: boolean | User$adoptionApplicationsArgs<ExtArgs>
    reviewedApplications?: boolean | User$reviewedApplicationsArgs<ExtArgs>
    auditLogs?: boolean | User$auditLogsArgs<ExtArgs>
    supportConversations?: boolean | User$supportConversationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    profileCompleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    passwordHash?: boolean
    role?: boolean
    profileCompleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animalListings?: boolean | User$animalListingsArgs<ExtArgs>
    adoptionApplications?: boolean | User$adoptionApplicationsArgs<ExtArgs>
    reviewedApplications?: boolean | User$reviewedApplicationsArgs<ExtArgs>
    auditLogs?: boolean | User$auditLogsArgs<ExtArgs>
    supportConversations?: boolean | User$supportConversationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      animalListings: Prisma.$AnimalListingPayload<ExtArgs>[]
      adoptionApplications: Prisma.$AdoptionApplicationPayload<ExtArgs>[]
      reviewedApplications: Prisma.$AdoptionApplicationPayload<ExtArgs>[]
      auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
      supportConversations: Prisma.$SupportConversationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      passwordHash: string | null
      role: string
      profileCompleted: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animalListings<T extends User$animalListingsArgs<ExtArgs> = {}>(args?: Subset<T, User$animalListingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findMany"> | Null>
    adoptionApplications<T extends User$adoptionApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$adoptionApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    reviewedApplications<T extends User$reviewedApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    auditLogs<T extends User$auditLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany"> | Null>
    supportConversations<T extends User$supportConversationsArgs<ExtArgs> = {}>(args?: Subset<T, User$supportConversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly profileCompleted: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.animalListings
   */
  export type User$animalListingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    where?: AnimalListingWhereInput
    orderBy?: AnimalListingOrderByWithRelationInput | AnimalListingOrderByWithRelationInput[]
    cursor?: AnimalListingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalListingScalarFieldEnum | AnimalListingScalarFieldEnum[]
  }

  /**
   * User.adoptionApplications
   */
  export type User$adoptionApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    where?: AdoptionApplicationWhereInput
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    cursor?: AdoptionApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * User.reviewedApplications
   */
  export type User$reviewedApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    where?: AdoptionApplicationWhereInput
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    cursor?: AdoptionApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * User.auditLogs
   */
  export type User$auditLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    cursor?: AuditLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * User.supportConversations
   */
  export type User$supportConversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    where?: SupportConversationWhereInput
    orderBy?: SupportConversationOrderByWithRelationInput | SupportConversationOrderByWithRelationInput[]
    cursor?: SupportConversationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportConversationScalarFieldEnum | SupportConversationScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model AnimalListing
   */

  export type AggregateAnimalListing = {
    _count: AnimalListingCountAggregateOutputType | null
    _avg: AnimalListingAvgAggregateOutputType | null
    _sum: AnimalListingSumAggregateOutputType | null
    _min: AnimalListingMinAggregateOutputType | null
    _max: AnimalListingMaxAggregateOutputType | null
  }

  export type AnimalListingAvgAggregateOutputType = {
    ageEstimate: number | null
  }

  export type AnimalListingSumAggregateOutputType = {
    ageEstimate: number | null
  }

  export type AnimalListingMinAggregateOutputType = {
    id: string | null
    ownerId: string | null
    species: string | null
    breed: string | null
    ageEstimate: number | null
    gender: string | null
    spayedNeutered: boolean | null
    description: string | null
    location: string | null
    photos: string | null
    healthStatus: string | null
    vaccinationRecords: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AnimalListingMaxAggregateOutputType = {
    id: string | null
    ownerId: string | null
    species: string | null
    breed: string | null
    ageEstimate: number | null
    gender: string | null
    spayedNeutered: boolean | null
    description: string | null
    location: string | null
    photos: string | null
    healthStatus: string | null
    vaccinationRecords: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AnimalListingCountAggregateOutputType = {
    id: number
    ownerId: number
    species: number
    breed: number
    ageEstimate: number
    gender: number
    spayedNeutered: number
    description: number
    location: number
    photos: number
    healthStatus: number
    vaccinationRecords: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AnimalListingAvgAggregateInputType = {
    ageEstimate?: true
  }

  export type AnimalListingSumAggregateInputType = {
    ageEstimate?: true
  }

  export type AnimalListingMinAggregateInputType = {
    id?: true
    ownerId?: true
    species?: true
    breed?: true
    ageEstimate?: true
    gender?: true
    spayedNeutered?: true
    description?: true
    location?: true
    photos?: true
    healthStatus?: true
    vaccinationRecords?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AnimalListingMaxAggregateInputType = {
    id?: true
    ownerId?: true
    species?: true
    breed?: true
    ageEstimate?: true
    gender?: true
    spayedNeutered?: true
    description?: true
    location?: true
    photos?: true
    healthStatus?: true
    vaccinationRecords?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AnimalListingCountAggregateInputType = {
    id?: true
    ownerId?: true
    species?: true
    breed?: true
    ageEstimate?: true
    gender?: true
    spayedNeutered?: true
    description?: true
    location?: true
    photos?: true
    healthStatus?: true
    vaccinationRecords?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AnimalListingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AnimalListing to aggregate.
     */
    where?: AnimalListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnimalListings to fetch.
     */
    orderBy?: AnimalListingOrderByWithRelationInput | AnimalListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnimalListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnimalListings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnimalListings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AnimalListings
    **/
    _count?: true | AnimalListingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnimalListingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnimalListingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnimalListingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnimalListingMaxAggregateInputType
  }

  export type GetAnimalListingAggregateType<T extends AnimalListingAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimalListing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimalListing[P]>
      : GetScalarType<T[P], AggregateAnimalListing[P]>
  }




  export type AnimalListingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnimalListingWhereInput
    orderBy?: AnimalListingOrderByWithAggregationInput | AnimalListingOrderByWithAggregationInput[]
    by: AnimalListingScalarFieldEnum[] | AnimalListingScalarFieldEnum
    having?: AnimalListingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnimalListingCountAggregateInputType | true
    _avg?: AnimalListingAvgAggregateInputType
    _sum?: AnimalListingSumAggregateInputType
    _min?: AnimalListingMinAggregateInputType
    _max?: AnimalListingMaxAggregateInputType
  }

  export type AnimalListingGroupByOutputType = {
    id: string
    ownerId: string
    species: string
    breed: string | null
    ageEstimate: number | null
    gender: string | null
    spayedNeutered: boolean
    description: string | null
    location: string
    photos: string
    healthStatus: string | null
    vaccinationRecords: string | null
    status: string
    createdAt: Date
    updatedAt: Date
    _count: AnimalListingCountAggregateOutputType | null
    _avg: AnimalListingAvgAggregateOutputType | null
    _sum: AnimalListingSumAggregateOutputType | null
    _min: AnimalListingMinAggregateOutputType | null
    _max: AnimalListingMaxAggregateOutputType | null
  }

  type GetAnimalListingGroupByPayload<T extends AnimalListingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnimalListingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnimalListingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnimalListingGroupByOutputType[P]>
            : GetScalarType<T[P], AnimalListingGroupByOutputType[P]>
        }
      >
    >


  export type AnimalListingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    species?: boolean
    breed?: boolean
    ageEstimate?: boolean
    gender?: boolean
    spayedNeutered?: boolean
    description?: boolean
    location?: boolean
    photos?: boolean
    healthStatus?: boolean
    vaccinationRecords?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    applications?: boolean | AnimalListing$applicationsArgs<ExtArgs>
    _count?: boolean | AnimalListingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animalListing"]>

  export type AnimalListingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    species?: boolean
    breed?: boolean
    ageEstimate?: boolean
    gender?: boolean
    spayedNeutered?: boolean
    description?: boolean
    location?: boolean
    photos?: boolean
    healthStatus?: boolean
    vaccinationRecords?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animalListing"]>

  export type AnimalListingSelectScalar = {
    id?: boolean
    ownerId?: boolean
    species?: boolean
    breed?: boolean
    ageEstimate?: boolean
    gender?: boolean
    spayedNeutered?: boolean
    description?: boolean
    location?: boolean
    photos?: boolean
    healthStatus?: boolean
    vaccinationRecords?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AnimalListingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    applications?: boolean | AnimalListing$applicationsArgs<ExtArgs>
    _count?: boolean | AnimalListingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AnimalListingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AnimalListingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AnimalListing"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      applications: Prisma.$AdoptionApplicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ownerId: string
      species: string
      breed: string | null
      ageEstimate: number | null
      gender: string | null
      spayedNeutered: boolean
      description: string | null
      location: string
      photos: string
      healthStatus: string | null
      vaccinationRecords: string | null
      status: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["animalListing"]>
    composites: {}
  }

  type AnimalListingGetPayload<S extends boolean | null | undefined | AnimalListingDefaultArgs> = $Result.GetResult<Prisma.$AnimalListingPayload, S>

  type AnimalListingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AnimalListingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AnimalListingCountAggregateInputType | true
    }

  export interface AnimalListingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AnimalListing'], meta: { name: 'AnimalListing' } }
    /**
     * Find zero or one AnimalListing that matches the filter.
     * @param {AnimalListingFindUniqueArgs} args - Arguments to find a AnimalListing
     * @example
     * // Get one AnimalListing
     * const animalListing = await prisma.animalListing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AnimalListingFindUniqueArgs>(args: SelectSubset<T, AnimalListingFindUniqueArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AnimalListing that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AnimalListingFindUniqueOrThrowArgs} args - Arguments to find a AnimalListing
     * @example
     * // Get one AnimalListing
     * const animalListing = await prisma.animalListing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AnimalListingFindUniqueOrThrowArgs>(args: SelectSubset<T, AnimalListingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AnimalListing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingFindFirstArgs} args - Arguments to find a AnimalListing
     * @example
     * // Get one AnimalListing
     * const animalListing = await prisma.animalListing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AnimalListingFindFirstArgs>(args?: SelectSubset<T, AnimalListingFindFirstArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AnimalListing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingFindFirstOrThrowArgs} args - Arguments to find a AnimalListing
     * @example
     * // Get one AnimalListing
     * const animalListing = await prisma.animalListing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AnimalListingFindFirstOrThrowArgs>(args?: SelectSubset<T, AnimalListingFindFirstOrThrowArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AnimalListings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AnimalListings
     * const animalListings = await prisma.animalListing.findMany()
     * 
     * // Get first 10 AnimalListings
     * const animalListings = await prisma.animalListing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const animalListingWithIdOnly = await prisma.animalListing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AnimalListingFindManyArgs>(args?: SelectSubset<T, AnimalListingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AnimalListing.
     * @param {AnimalListingCreateArgs} args - Arguments to create a AnimalListing.
     * @example
     * // Create one AnimalListing
     * const AnimalListing = await prisma.animalListing.create({
     *   data: {
     *     // ... data to create a AnimalListing
     *   }
     * })
     * 
     */
    create<T extends AnimalListingCreateArgs>(args: SelectSubset<T, AnimalListingCreateArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AnimalListings.
     * @param {AnimalListingCreateManyArgs} args - Arguments to create many AnimalListings.
     * @example
     * // Create many AnimalListings
     * const animalListing = await prisma.animalListing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AnimalListingCreateManyArgs>(args?: SelectSubset<T, AnimalListingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AnimalListings and returns the data saved in the database.
     * @param {AnimalListingCreateManyAndReturnArgs} args - Arguments to create many AnimalListings.
     * @example
     * // Create many AnimalListings
     * const animalListing = await prisma.animalListing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AnimalListings and only return the `id`
     * const animalListingWithIdOnly = await prisma.animalListing.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AnimalListingCreateManyAndReturnArgs>(args?: SelectSubset<T, AnimalListingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AnimalListing.
     * @param {AnimalListingDeleteArgs} args - Arguments to delete one AnimalListing.
     * @example
     * // Delete one AnimalListing
     * const AnimalListing = await prisma.animalListing.delete({
     *   where: {
     *     // ... filter to delete one AnimalListing
     *   }
     * })
     * 
     */
    delete<T extends AnimalListingDeleteArgs>(args: SelectSubset<T, AnimalListingDeleteArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AnimalListing.
     * @param {AnimalListingUpdateArgs} args - Arguments to update one AnimalListing.
     * @example
     * // Update one AnimalListing
     * const animalListing = await prisma.animalListing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AnimalListingUpdateArgs>(args: SelectSubset<T, AnimalListingUpdateArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AnimalListings.
     * @param {AnimalListingDeleteManyArgs} args - Arguments to filter AnimalListings to delete.
     * @example
     * // Delete a few AnimalListings
     * const { count } = await prisma.animalListing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AnimalListingDeleteManyArgs>(args?: SelectSubset<T, AnimalListingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AnimalListings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AnimalListings
     * const animalListing = await prisma.animalListing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AnimalListingUpdateManyArgs>(args: SelectSubset<T, AnimalListingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AnimalListing.
     * @param {AnimalListingUpsertArgs} args - Arguments to update or create a AnimalListing.
     * @example
     * // Update or create a AnimalListing
     * const animalListing = await prisma.animalListing.upsert({
     *   create: {
     *     // ... data to create a AnimalListing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AnimalListing we want to update
     *   }
     * })
     */
    upsert<T extends AnimalListingUpsertArgs>(args: SelectSubset<T, AnimalListingUpsertArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AnimalListings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingCountArgs} args - Arguments to filter AnimalListings to count.
     * @example
     * // Count the number of AnimalListings
     * const count = await prisma.animalListing.count({
     *   where: {
     *     // ... the filter for the AnimalListings we want to count
     *   }
     * })
    **/
    count<T extends AnimalListingCountArgs>(
      args?: Subset<T, AnimalListingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnimalListingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AnimalListing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnimalListingAggregateArgs>(args: Subset<T, AnimalListingAggregateArgs>): Prisma.PrismaPromise<GetAnimalListingAggregateType<T>>

    /**
     * Group by AnimalListing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalListingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnimalListingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnimalListingGroupByArgs['orderBy'] }
        : { orderBy?: AnimalListingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnimalListingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimalListingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AnimalListing model
   */
  readonly fields: AnimalListingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AnimalListing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnimalListingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    applications<T extends AnimalListing$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, AnimalListing$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AnimalListing model
   */ 
  interface AnimalListingFieldRefs {
    readonly id: FieldRef<"AnimalListing", 'String'>
    readonly ownerId: FieldRef<"AnimalListing", 'String'>
    readonly species: FieldRef<"AnimalListing", 'String'>
    readonly breed: FieldRef<"AnimalListing", 'String'>
    readonly ageEstimate: FieldRef<"AnimalListing", 'Int'>
    readonly gender: FieldRef<"AnimalListing", 'String'>
    readonly spayedNeutered: FieldRef<"AnimalListing", 'Boolean'>
    readonly description: FieldRef<"AnimalListing", 'String'>
    readonly location: FieldRef<"AnimalListing", 'String'>
    readonly photos: FieldRef<"AnimalListing", 'String'>
    readonly healthStatus: FieldRef<"AnimalListing", 'String'>
    readonly vaccinationRecords: FieldRef<"AnimalListing", 'String'>
    readonly status: FieldRef<"AnimalListing", 'String'>
    readonly createdAt: FieldRef<"AnimalListing", 'DateTime'>
    readonly updatedAt: FieldRef<"AnimalListing", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AnimalListing findUnique
   */
  export type AnimalListingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter, which AnimalListing to fetch.
     */
    where: AnimalListingWhereUniqueInput
  }

  /**
   * AnimalListing findUniqueOrThrow
   */
  export type AnimalListingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter, which AnimalListing to fetch.
     */
    where: AnimalListingWhereUniqueInput
  }

  /**
   * AnimalListing findFirst
   */
  export type AnimalListingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter, which AnimalListing to fetch.
     */
    where?: AnimalListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnimalListings to fetch.
     */
    orderBy?: AnimalListingOrderByWithRelationInput | AnimalListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AnimalListings.
     */
    cursor?: AnimalListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnimalListings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnimalListings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AnimalListings.
     */
    distinct?: AnimalListingScalarFieldEnum | AnimalListingScalarFieldEnum[]
  }

  /**
   * AnimalListing findFirstOrThrow
   */
  export type AnimalListingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter, which AnimalListing to fetch.
     */
    where?: AnimalListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnimalListings to fetch.
     */
    orderBy?: AnimalListingOrderByWithRelationInput | AnimalListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AnimalListings.
     */
    cursor?: AnimalListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnimalListings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnimalListings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AnimalListings.
     */
    distinct?: AnimalListingScalarFieldEnum | AnimalListingScalarFieldEnum[]
  }

  /**
   * AnimalListing findMany
   */
  export type AnimalListingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter, which AnimalListings to fetch.
     */
    where?: AnimalListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AnimalListings to fetch.
     */
    orderBy?: AnimalListingOrderByWithRelationInput | AnimalListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AnimalListings.
     */
    cursor?: AnimalListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AnimalListings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AnimalListings.
     */
    skip?: number
    distinct?: AnimalListingScalarFieldEnum | AnimalListingScalarFieldEnum[]
  }

  /**
   * AnimalListing create
   */
  export type AnimalListingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * The data needed to create a AnimalListing.
     */
    data: XOR<AnimalListingCreateInput, AnimalListingUncheckedCreateInput>
  }

  /**
   * AnimalListing createMany
   */
  export type AnimalListingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AnimalListings.
     */
    data: AnimalListingCreateManyInput | AnimalListingCreateManyInput[]
  }

  /**
   * AnimalListing createManyAndReturn
   */
  export type AnimalListingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AnimalListings.
     */
    data: AnimalListingCreateManyInput | AnimalListingCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AnimalListing update
   */
  export type AnimalListingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * The data needed to update a AnimalListing.
     */
    data: XOR<AnimalListingUpdateInput, AnimalListingUncheckedUpdateInput>
    /**
     * Choose, which AnimalListing to update.
     */
    where: AnimalListingWhereUniqueInput
  }

  /**
   * AnimalListing updateMany
   */
  export type AnimalListingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AnimalListings.
     */
    data: XOR<AnimalListingUpdateManyMutationInput, AnimalListingUncheckedUpdateManyInput>
    /**
     * Filter which AnimalListings to update
     */
    where?: AnimalListingWhereInput
  }

  /**
   * AnimalListing upsert
   */
  export type AnimalListingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * The filter to search for the AnimalListing to update in case it exists.
     */
    where: AnimalListingWhereUniqueInput
    /**
     * In case the AnimalListing found by the `where` argument doesn't exist, create a new AnimalListing with this data.
     */
    create: XOR<AnimalListingCreateInput, AnimalListingUncheckedCreateInput>
    /**
     * In case the AnimalListing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnimalListingUpdateInput, AnimalListingUncheckedUpdateInput>
  }

  /**
   * AnimalListing delete
   */
  export type AnimalListingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
    /**
     * Filter which AnimalListing to delete.
     */
    where: AnimalListingWhereUniqueInput
  }

  /**
   * AnimalListing deleteMany
   */
  export type AnimalListingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AnimalListings to delete
     */
    where?: AnimalListingWhereInput
  }

  /**
   * AnimalListing.applications
   */
  export type AnimalListing$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    where?: AdoptionApplicationWhereInput
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    cursor?: AdoptionApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * AnimalListing without action
   */
  export type AnimalListingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalListing
     */
    select?: AnimalListingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalListingInclude<ExtArgs> | null
  }


  /**
   * Model AdoptionApplication
   */

  export type AggregateAdoptionApplication = {
    _count: AdoptionApplicationCountAggregateOutputType | null
    _min: AdoptionApplicationMinAggregateOutputType | null
    _max: AdoptionApplicationMaxAggregateOutputType | null
  }

  export type AdoptionApplicationMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    applicantId: string | null
    answers: string | null
    status: string | null
    submittedAt: Date | null
    reviewedAt: Date | null
    reviewerId: string | null
    reviewNotes: string | null
  }

  export type AdoptionApplicationMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    applicantId: string | null
    answers: string | null
    status: string | null
    submittedAt: Date | null
    reviewedAt: Date | null
    reviewerId: string | null
    reviewNotes: string | null
  }

  export type AdoptionApplicationCountAggregateOutputType = {
    id: number
    listingId: number
    applicantId: number
    answers: number
    status: number
    submittedAt: number
    reviewedAt: number
    reviewerId: number
    reviewNotes: number
    _all: number
  }


  export type AdoptionApplicationMinAggregateInputType = {
    id?: true
    listingId?: true
    applicantId?: true
    answers?: true
    status?: true
    submittedAt?: true
    reviewedAt?: true
    reviewerId?: true
    reviewNotes?: true
  }

  export type AdoptionApplicationMaxAggregateInputType = {
    id?: true
    listingId?: true
    applicantId?: true
    answers?: true
    status?: true
    submittedAt?: true
    reviewedAt?: true
    reviewerId?: true
    reviewNotes?: true
  }

  export type AdoptionApplicationCountAggregateInputType = {
    id?: true
    listingId?: true
    applicantId?: true
    answers?: true
    status?: true
    submittedAt?: true
    reviewedAt?: true
    reviewerId?: true
    reviewNotes?: true
    _all?: true
  }

  export type AdoptionApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdoptionApplication to aggregate.
     */
    where?: AdoptionApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdoptionApplications to fetch.
     */
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdoptionApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdoptionApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdoptionApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdoptionApplications
    **/
    _count?: true | AdoptionApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdoptionApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdoptionApplicationMaxAggregateInputType
  }

  export type GetAdoptionApplicationAggregateType<T extends AdoptionApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateAdoptionApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdoptionApplication[P]>
      : GetScalarType<T[P], AggregateAdoptionApplication[P]>
  }




  export type AdoptionApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdoptionApplicationWhereInput
    orderBy?: AdoptionApplicationOrderByWithAggregationInput | AdoptionApplicationOrderByWithAggregationInput[]
    by: AdoptionApplicationScalarFieldEnum[] | AdoptionApplicationScalarFieldEnum
    having?: AdoptionApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdoptionApplicationCountAggregateInputType | true
    _min?: AdoptionApplicationMinAggregateInputType
    _max?: AdoptionApplicationMaxAggregateInputType
  }

  export type AdoptionApplicationGroupByOutputType = {
    id: string
    listingId: string
    applicantId: string | null
    answers: string
    status: string
    submittedAt: Date
    reviewedAt: Date | null
    reviewerId: string | null
    reviewNotes: string | null
    _count: AdoptionApplicationCountAggregateOutputType | null
    _min: AdoptionApplicationMinAggregateOutputType | null
    _max: AdoptionApplicationMaxAggregateOutputType | null
  }

  type GetAdoptionApplicationGroupByPayload<T extends AdoptionApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdoptionApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdoptionApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdoptionApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], AdoptionApplicationGroupByOutputType[P]>
        }
      >
    >


  export type AdoptionApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    applicantId?: boolean
    answers?: boolean
    status?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewerId?: boolean
    reviewNotes?: boolean
    listing?: boolean | AnimalListingDefaultArgs<ExtArgs>
    applicant?: boolean | AdoptionApplication$applicantArgs<ExtArgs>
    reviewer?: boolean | AdoptionApplication$reviewerArgs<ExtArgs>
  }, ExtArgs["result"]["adoptionApplication"]>

  export type AdoptionApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    applicantId?: boolean
    answers?: boolean
    status?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewerId?: boolean
    reviewNotes?: boolean
    listing?: boolean | AnimalListingDefaultArgs<ExtArgs>
    applicant?: boolean | AdoptionApplication$applicantArgs<ExtArgs>
    reviewer?: boolean | AdoptionApplication$reviewerArgs<ExtArgs>
  }, ExtArgs["result"]["adoptionApplication"]>

  export type AdoptionApplicationSelectScalar = {
    id?: boolean
    listingId?: boolean
    applicantId?: boolean
    answers?: boolean
    status?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewerId?: boolean
    reviewNotes?: boolean
  }

  export type AdoptionApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | AnimalListingDefaultArgs<ExtArgs>
    applicant?: boolean | AdoptionApplication$applicantArgs<ExtArgs>
    reviewer?: boolean | AdoptionApplication$reviewerArgs<ExtArgs>
  }
  export type AdoptionApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listing?: boolean | AnimalListingDefaultArgs<ExtArgs>
    applicant?: boolean | AdoptionApplication$applicantArgs<ExtArgs>
    reviewer?: boolean | AdoptionApplication$reviewerArgs<ExtArgs>
  }

  export type $AdoptionApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdoptionApplication"
    objects: {
      listing: Prisma.$AnimalListingPayload<ExtArgs>
      applicant: Prisma.$UserPayload<ExtArgs> | null
      reviewer: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      applicantId: string | null
      answers: string
      status: string
      submittedAt: Date
      reviewedAt: Date | null
      reviewerId: string | null
      reviewNotes: string | null
    }, ExtArgs["result"]["adoptionApplication"]>
    composites: {}
  }

  type AdoptionApplicationGetPayload<S extends boolean | null | undefined | AdoptionApplicationDefaultArgs> = $Result.GetResult<Prisma.$AdoptionApplicationPayload, S>

  type AdoptionApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdoptionApplicationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdoptionApplicationCountAggregateInputType | true
    }

  export interface AdoptionApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdoptionApplication'], meta: { name: 'AdoptionApplication' } }
    /**
     * Find zero or one AdoptionApplication that matches the filter.
     * @param {AdoptionApplicationFindUniqueArgs} args - Arguments to find a AdoptionApplication
     * @example
     * // Get one AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdoptionApplicationFindUniqueArgs>(args: SelectSubset<T, AdoptionApplicationFindUniqueArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AdoptionApplication that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AdoptionApplicationFindUniqueOrThrowArgs} args - Arguments to find a AdoptionApplication
     * @example
     * // Get one AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdoptionApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, AdoptionApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AdoptionApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationFindFirstArgs} args - Arguments to find a AdoptionApplication
     * @example
     * // Get one AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdoptionApplicationFindFirstArgs>(args?: SelectSubset<T, AdoptionApplicationFindFirstArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AdoptionApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationFindFirstOrThrowArgs} args - Arguments to find a AdoptionApplication
     * @example
     * // Get one AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdoptionApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, AdoptionApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AdoptionApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdoptionApplications
     * const adoptionApplications = await prisma.adoptionApplication.findMany()
     * 
     * // Get first 10 AdoptionApplications
     * const adoptionApplications = await prisma.adoptionApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adoptionApplicationWithIdOnly = await prisma.adoptionApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdoptionApplicationFindManyArgs>(args?: SelectSubset<T, AdoptionApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AdoptionApplication.
     * @param {AdoptionApplicationCreateArgs} args - Arguments to create a AdoptionApplication.
     * @example
     * // Create one AdoptionApplication
     * const AdoptionApplication = await prisma.adoptionApplication.create({
     *   data: {
     *     // ... data to create a AdoptionApplication
     *   }
     * })
     * 
     */
    create<T extends AdoptionApplicationCreateArgs>(args: SelectSubset<T, AdoptionApplicationCreateArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AdoptionApplications.
     * @param {AdoptionApplicationCreateManyArgs} args - Arguments to create many AdoptionApplications.
     * @example
     * // Create many AdoptionApplications
     * const adoptionApplication = await prisma.adoptionApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdoptionApplicationCreateManyArgs>(args?: SelectSubset<T, AdoptionApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdoptionApplications and returns the data saved in the database.
     * @param {AdoptionApplicationCreateManyAndReturnArgs} args - Arguments to create many AdoptionApplications.
     * @example
     * // Create many AdoptionApplications
     * const adoptionApplication = await prisma.adoptionApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdoptionApplications and only return the `id`
     * const adoptionApplicationWithIdOnly = await prisma.adoptionApplication.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdoptionApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, AdoptionApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AdoptionApplication.
     * @param {AdoptionApplicationDeleteArgs} args - Arguments to delete one AdoptionApplication.
     * @example
     * // Delete one AdoptionApplication
     * const AdoptionApplication = await prisma.adoptionApplication.delete({
     *   where: {
     *     // ... filter to delete one AdoptionApplication
     *   }
     * })
     * 
     */
    delete<T extends AdoptionApplicationDeleteArgs>(args: SelectSubset<T, AdoptionApplicationDeleteArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AdoptionApplication.
     * @param {AdoptionApplicationUpdateArgs} args - Arguments to update one AdoptionApplication.
     * @example
     * // Update one AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdoptionApplicationUpdateArgs>(args: SelectSubset<T, AdoptionApplicationUpdateArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AdoptionApplications.
     * @param {AdoptionApplicationDeleteManyArgs} args - Arguments to filter AdoptionApplications to delete.
     * @example
     * // Delete a few AdoptionApplications
     * const { count } = await prisma.adoptionApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdoptionApplicationDeleteManyArgs>(args?: SelectSubset<T, AdoptionApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdoptionApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdoptionApplications
     * const adoptionApplication = await prisma.adoptionApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdoptionApplicationUpdateManyArgs>(args: SelectSubset<T, AdoptionApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AdoptionApplication.
     * @param {AdoptionApplicationUpsertArgs} args - Arguments to update or create a AdoptionApplication.
     * @example
     * // Update or create a AdoptionApplication
     * const adoptionApplication = await prisma.adoptionApplication.upsert({
     *   create: {
     *     // ... data to create a AdoptionApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdoptionApplication we want to update
     *   }
     * })
     */
    upsert<T extends AdoptionApplicationUpsertArgs>(args: SelectSubset<T, AdoptionApplicationUpsertArgs<ExtArgs>>): Prisma__AdoptionApplicationClient<$Result.GetResult<Prisma.$AdoptionApplicationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AdoptionApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationCountArgs} args - Arguments to filter AdoptionApplications to count.
     * @example
     * // Count the number of AdoptionApplications
     * const count = await prisma.adoptionApplication.count({
     *   where: {
     *     // ... the filter for the AdoptionApplications we want to count
     *   }
     * })
    **/
    count<T extends AdoptionApplicationCountArgs>(
      args?: Subset<T, AdoptionApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdoptionApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdoptionApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdoptionApplicationAggregateArgs>(args: Subset<T, AdoptionApplicationAggregateArgs>): Prisma.PrismaPromise<GetAdoptionApplicationAggregateType<T>>

    /**
     * Group by AdoptionApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptionApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdoptionApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdoptionApplicationGroupByArgs['orderBy'] }
        : { orderBy?: AdoptionApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdoptionApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdoptionApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdoptionApplication model
   */
  readonly fields: AdoptionApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdoptionApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdoptionApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listing<T extends AnimalListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnimalListingDefaultArgs<ExtArgs>>): Prisma__AnimalListingClient<$Result.GetResult<Prisma.$AnimalListingPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    applicant<T extends AdoptionApplication$applicantArgs<ExtArgs> = {}>(args?: Subset<T, AdoptionApplication$applicantArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    reviewer<T extends AdoptionApplication$reviewerArgs<ExtArgs> = {}>(args?: Subset<T, AdoptionApplication$reviewerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdoptionApplication model
   */ 
  interface AdoptionApplicationFieldRefs {
    readonly id: FieldRef<"AdoptionApplication", 'String'>
    readonly listingId: FieldRef<"AdoptionApplication", 'String'>
    readonly applicantId: FieldRef<"AdoptionApplication", 'String'>
    readonly answers: FieldRef<"AdoptionApplication", 'String'>
    readonly status: FieldRef<"AdoptionApplication", 'String'>
    readonly submittedAt: FieldRef<"AdoptionApplication", 'DateTime'>
    readonly reviewedAt: FieldRef<"AdoptionApplication", 'DateTime'>
    readonly reviewerId: FieldRef<"AdoptionApplication", 'String'>
    readonly reviewNotes: FieldRef<"AdoptionApplication", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AdoptionApplication findUnique
   */
  export type AdoptionApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter, which AdoptionApplication to fetch.
     */
    where: AdoptionApplicationWhereUniqueInput
  }

  /**
   * AdoptionApplication findUniqueOrThrow
   */
  export type AdoptionApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter, which AdoptionApplication to fetch.
     */
    where: AdoptionApplicationWhereUniqueInput
  }

  /**
   * AdoptionApplication findFirst
   */
  export type AdoptionApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter, which AdoptionApplication to fetch.
     */
    where?: AdoptionApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdoptionApplications to fetch.
     */
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdoptionApplications.
     */
    cursor?: AdoptionApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdoptionApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdoptionApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdoptionApplications.
     */
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * AdoptionApplication findFirstOrThrow
   */
  export type AdoptionApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter, which AdoptionApplication to fetch.
     */
    where?: AdoptionApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdoptionApplications to fetch.
     */
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdoptionApplications.
     */
    cursor?: AdoptionApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdoptionApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdoptionApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdoptionApplications.
     */
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * AdoptionApplication findMany
   */
  export type AdoptionApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter, which AdoptionApplications to fetch.
     */
    where?: AdoptionApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdoptionApplications to fetch.
     */
    orderBy?: AdoptionApplicationOrderByWithRelationInput | AdoptionApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdoptionApplications.
     */
    cursor?: AdoptionApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdoptionApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdoptionApplications.
     */
    skip?: number
    distinct?: AdoptionApplicationScalarFieldEnum | AdoptionApplicationScalarFieldEnum[]
  }

  /**
   * AdoptionApplication create
   */
  export type AdoptionApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a AdoptionApplication.
     */
    data: XOR<AdoptionApplicationCreateInput, AdoptionApplicationUncheckedCreateInput>
  }

  /**
   * AdoptionApplication createMany
   */
  export type AdoptionApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdoptionApplications.
     */
    data: AdoptionApplicationCreateManyInput | AdoptionApplicationCreateManyInput[]
  }

  /**
   * AdoptionApplication createManyAndReturn
   */
  export type AdoptionApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AdoptionApplications.
     */
    data: AdoptionApplicationCreateManyInput | AdoptionApplicationCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdoptionApplication update
   */
  export type AdoptionApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a AdoptionApplication.
     */
    data: XOR<AdoptionApplicationUpdateInput, AdoptionApplicationUncheckedUpdateInput>
    /**
     * Choose, which AdoptionApplication to update.
     */
    where: AdoptionApplicationWhereUniqueInput
  }

  /**
   * AdoptionApplication updateMany
   */
  export type AdoptionApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdoptionApplications.
     */
    data: XOR<AdoptionApplicationUpdateManyMutationInput, AdoptionApplicationUncheckedUpdateManyInput>
    /**
     * Filter which AdoptionApplications to update
     */
    where?: AdoptionApplicationWhereInput
  }

  /**
   * AdoptionApplication upsert
   */
  export type AdoptionApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the AdoptionApplication to update in case it exists.
     */
    where: AdoptionApplicationWhereUniqueInput
    /**
     * In case the AdoptionApplication found by the `where` argument doesn't exist, create a new AdoptionApplication with this data.
     */
    create: XOR<AdoptionApplicationCreateInput, AdoptionApplicationUncheckedCreateInput>
    /**
     * In case the AdoptionApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdoptionApplicationUpdateInput, AdoptionApplicationUncheckedUpdateInput>
  }

  /**
   * AdoptionApplication delete
   */
  export type AdoptionApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
    /**
     * Filter which AdoptionApplication to delete.
     */
    where: AdoptionApplicationWhereUniqueInput
  }

  /**
   * AdoptionApplication deleteMany
   */
  export type AdoptionApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdoptionApplications to delete
     */
    where?: AdoptionApplicationWhereInput
  }

  /**
   * AdoptionApplication.applicant
   */
  export type AdoptionApplication$applicantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AdoptionApplication.reviewer
   */
  export type AdoptionApplication$reviewerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AdoptionApplication without action
   */
  export type AdoptionApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptionApplication
     */
    select?: AdoptionApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptionApplicationInclude<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    actorId: string | null
    action: string | null
    targetType: string | null
    targetId: string | null
    timestamp: Date | null
    notes: string | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    actorId: string | null
    action: string | null
    targetType: string | null
    targetId: string | null
    timestamp: Date | null
    notes: string | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    actorId: number
    action: number
    targetType: number
    targetId: number
    timestamp: number
    notes: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    actorId?: true
    action?: true
    targetType?: true
    targetId?: true
    timestamp?: true
    notes?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    actorId?: true
    action?: true
    targetType?: true
    targetId?: true
    timestamp?: true
    notes?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    actorId?: true
    action?: true
    targetType?: true
    targetId?: true
    timestamp?: true
    notes?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    actorId: string
    action: string
    targetType: string
    targetId: string
    timestamp: Date
    notes: string | null
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    actorId?: boolean
    action?: boolean
    targetType?: boolean
    targetId?: boolean
    timestamp?: boolean
    notes?: boolean
    actor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    actorId?: boolean
    action?: boolean
    targetType?: boolean
    targetId?: boolean
    timestamp?: boolean
    notes?: boolean
    actor?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectScalar = {
    id?: boolean
    actorId?: boolean
    action?: boolean
    targetType?: boolean
    targetId?: boolean
    timestamp?: boolean
    notes?: boolean
  }

  export type AuditLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actor?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuditLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    actor?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {
      actor: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      actorId: string
      action: string
      targetType: string
      targetId: string
      timestamp: Date
      notes: string | null
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditLogs and returns the data saved in the database.
     * @param {AuditLogCreateManyAndReturnArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    actor<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly actorId: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly targetType: FieldRef<"AuditLog", 'String'>
    readonly targetId: FieldRef<"AuditLog", 'String'>
    readonly timestamp: FieldRef<"AuditLog", 'DateTime'>
    readonly notes: FieldRef<"AuditLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
  }

  /**
   * AuditLog createManyAndReturn
   */
  export type AuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditLogInclude<ExtArgs> | null
  }


  /**
   * Model SupportConversation
   */

  export type AggregateSupportConversation = {
    _count: SupportConversationCountAggregateOutputType | null
    _min: SupportConversationMinAggregateOutputType | null
    _max: SupportConversationMaxAggregateOutputType | null
  }

  export type SupportConversationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    messages: string | null
    status: string | null
    createdAt: Date | null
    resolvedAt: Date | null
  }

  export type SupportConversationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    messages: string | null
    status: string | null
    createdAt: Date | null
    resolvedAt: Date | null
  }

  export type SupportConversationCountAggregateOutputType = {
    id: number
    userId: number
    messages: number
    status: number
    createdAt: number
    resolvedAt: number
    _all: number
  }


  export type SupportConversationMinAggregateInputType = {
    id?: true
    userId?: true
    messages?: true
    status?: true
    createdAt?: true
    resolvedAt?: true
  }

  export type SupportConversationMaxAggregateInputType = {
    id?: true
    userId?: true
    messages?: true
    status?: true
    createdAt?: true
    resolvedAt?: true
  }

  export type SupportConversationCountAggregateInputType = {
    id?: true
    userId?: true
    messages?: true
    status?: true
    createdAt?: true
    resolvedAt?: true
    _all?: true
  }

  export type SupportConversationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportConversation to aggregate.
     */
    where?: SupportConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportConversations to fetch.
     */
    orderBy?: SupportConversationOrderByWithRelationInput | SupportConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupportConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportConversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportConversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupportConversations
    **/
    _count?: true | SupportConversationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupportConversationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupportConversationMaxAggregateInputType
  }

  export type GetSupportConversationAggregateType<T extends SupportConversationAggregateArgs> = {
        [P in keyof T & keyof AggregateSupportConversation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupportConversation[P]>
      : GetScalarType<T[P], AggregateSupportConversation[P]>
  }




  export type SupportConversationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportConversationWhereInput
    orderBy?: SupportConversationOrderByWithAggregationInput | SupportConversationOrderByWithAggregationInput[]
    by: SupportConversationScalarFieldEnum[] | SupportConversationScalarFieldEnum
    having?: SupportConversationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupportConversationCountAggregateInputType | true
    _min?: SupportConversationMinAggregateInputType
    _max?: SupportConversationMaxAggregateInputType
  }

  export type SupportConversationGroupByOutputType = {
    id: string
    userId: string
    messages: string
    status: string
    createdAt: Date
    resolvedAt: Date | null
    _count: SupportConversationCountAggregateOutputType | null
    _min: SupportConversationMinAggregateOutputType | null
    _max: SupportConversationMaxAggregateOutputType | null
  }

  type GetSupportConversationGroupByPayload<T extends SupportConversationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupportConversationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupportConversationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupportConversationGroupByOutputType[P]>
            : GetScalarType<T[P], SupportConversationGroupByOutputType[P]>
        }
      >
    >


  export type SupportConversationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    messages?: boolean
    status?: boolean
    createdAt?: boolean
    resolvedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportConversation"]>

  export type SupportConversationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    messages?: boolean
    status?: boolean
    createdAt?: boolean
    resolvedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportConversation"]>

  export type SupportConversationSelectScalar = {
    id?: boolean
    userId?: boolean
    messages?: boolean
    status?: boolean
    createdAt?: boolean
    resolvedAt?: boolean
  }

  export type SupportConversationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SupportConversationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SupportConversationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupportConversation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      messages: string
      status: string
      createdAt: Date
      resolvedAt: Date | null
    }, ExtArgs["result"]["supportConversation"]>
    composites: {}
  }

  type SupportConversationGetPayload<S extends boolean | null | undefined | SupportConversationDefaultArgs> = $Result.GetResult<Prisma.$SupportConversationPayload, S>

  type SupportConversationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SupportConversationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SupportConversationCountAggregateInputType | true
    }

  export interface SupportConversationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupportConversation'], meta: { name: 'SupportConversation' } }
    /**
     * Find zero or one SupportConversation that matches the filter.
     * @param {SupportConversationFindUniqueArgs} args - Arguments to find a SupportConversation
     * @example
     * // Get one SupportConversation
     * const supportConversation = await prisma.supportConversation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupportConversationFindUniqueArgs>(args: SelectSubset<T, SupportConversationFindUniqueArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SupportConversation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SupportConversationFindUniqueOrThrowArgs} args - Arguments to find a SupportConversation
     * @example
     * // Get one SupportConversation
     * const supportConversation = await prisma.supportConversation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupportConversationFindUniqueOrThrowArgs>(args: SelectSubset<T, SupportConversationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SupportConversation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationFindFirstArgs} args - Arguments to find a SupportConversation
     * @example
     * // Get one SupportConversation
     * const supportConversation = await prisma.supportConversation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupportConversationFindFirstArgs>(args?: SelectSubset<T, SupportConversationFindFirstArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SupportConversation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationFindFirstOrThrowArgs} args - Arguments to find a SupportConversation
     * @example
     * // Get one SupportConversation
     * const supportConversation = await prisma.supportConversation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupportConversationFindFirstOrThrowArgs>(args?: SelectSubset<T, SupportConversationFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SupportConversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupportConversations
     * const supportConversations = await prisma.supportConversation.findMany()
     * 
     * // Get first 10 SupportConversations
     * const supportConversations = await prisma.supportConversation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supportConversationWithIdOnly = await prisma.supportConversation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupportConversationFindManyArgs>(args?: SelectSubset<T, SupportConversationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SupportConversation.
     * @param {SupportConversationCreateArgs} args - Arguments to create a SupportConversation.
     * @example
     * // Create one SupportConversation
     * const SupportConversation = await prisma.supportConversation.create({
     *   data: {
     *     // ... data to create a SupportConversation
     *   }
     * })
     * 
     */
    create<T extends SupportConversationCreateArgs>(args: SelectSubset<T, SupportConversationCreateArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SupportConversations.
     * @param {SupportConversationCreateManyArgs} args - Arguments to create many SupportConversations.
     * @example
     * // Create many SupportConversations
     * const supportConversation = await prisma.supportConversation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupportConversationCreateManyArgs>(args?: SelectSubset<T, SupportConversationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupportConversations and returns the data saved in the database.
     * @param {SupportConversationCreateManyAndReturnArgs} args - Arguments to create many SupportConversations.
     * @example
     * // Create many SupportConversations
     * const supportConversation = await prisma.supportConversation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupportConversations and only return the `id`
     * const supportConversationWithIdOnly = await prisma.supportConversation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupportConversationCreateManyAndReturnArgs>(args?: SelectSubset<T, SupportConversationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SupportConversation.
     * @param {SupportConversationDeleteArgs} args - Arguments to delete one SupportConversation.
     * @example
     * // Delete one SupportConversation
     * const SupportConversation = await prisma.supportConversation.delete({
     *   where: {
     *     // ... filter to delete one SupportConversation
     *   }
     * })
     * 
     */
    delete<T extends SupportConversationDeleteArgs>(args: SelectSubset<T, SupportConversationDeleteArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SupportConversation.
     * @param {SupportConversationUpdateArgs} args - Arguments to update one SupportConversation.
     * @example
     * // Update one SupportConversation
     * const supportConversation = await prisma.supportConversation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupportConversationUpdateArgs>(args: SelectSubset<T, SupportConversationUpdateArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SupportConversations.
     * @param {SupportConversationDeleteManyArgs} args - Arguments to filter SupportConversations to delete.
     * @example
     * // Delete a few SupportConversations
     * const { count } = await prisma.supportConversation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupportConversationDeleteManyArgs>(args?: SelectSubset<T, SupportConversationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportConversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupportConversations
     * const supportConversation = await prisma.supportConversation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupportConversationUpdateManyArgs>(args: SelectSubset<T, SupportConversationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SupportConversation.
     * @param {SupportConversationUpsertArgs} args - Arguments to update or create a SupportConversation.
     * @example
     * // Update or create a SupportConversation
     * const supportConversation = await prisma.supportConversation.upsert({
     *   create: {
     *     // ... data to create a SupportConversation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupportConversation we want to update
     *   }
     * })
     */
    upsert<T extends SupportConversationUpsertArgs>(args: SelectSubset<T, SupportConversationUpsertArgs<ExtArgs>>): Prisma__SupportConversationClient<$Result.GetResult<Prisma.$SupportConversationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SupportConversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationCountArgs} args - Arguments to filter SupportConversations to count.
     * @example
     * // Count the number of SupportConversations
     * const count = await prisma.supportConversation.count({
     *   where: {
     *     // ... the filter for the SupportConversations we want to count
     *   }
     * })
    **/
    count<T extends SupportConversationCountArgs>(
      args?: Subset<T, SupportConversationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupportConversationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupportConversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupportConversationAggregateArgs>(args: Subset<T, SupportConversationAggregateArgs>): Prisma.PrismaPromise<GetSupportConversationAggregateType<T>>

    /**
     * Group by SupportConversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportConversationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupportConversationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupportConversationGroupByArgs['orderBy'] }
        : { orderBy?: SupportConversationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupportConversationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupportConversationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupportConversation model
   */
  readonly fields: SupportConversationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupportConversation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupportConversationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupportConversation model
   */ 
  interface SupportConversationFieldRefs {
    readonly id: FieldRef<"SupportConversation", 'String'>
    readonly userId: FieldRef<"SupportConversation", 'String'>
    readonly messages: FieldRef<"SupportConversation", 'String'>
    readonly status: FieldRef<"SupportConversation", 'String'>
    readonly createdAt: FieldRef<"SupportConversation", 'DateTime'>
    readonly resolvedAt: FieldRef<"SupportConversation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SupportConversation findUnique
   */
  export type SupportConversationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter, which SupportConversation to fetch.
     */
    where: SupportConversationWhereUniqueInput
  }

  /**
   * SupportConversation findUniqueOrThrow
   */
  export type SupportConversationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter, which SupportConversation to fetch.
     */
    where: SupportConversationWhereUniqueInput
  }

  /**
   * SupportConversation findFirst
   */
  export type SupportConversationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter, which SupportConversation to fetch.
     */
    where?: SupportConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportConversations to fetch.
     */
    orderBy?: SupportConversationOrderByWithRelationInput | SupportConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportConversations.
     */
    cursor?: SupportConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportConversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportConversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportConversations.
     */
    distinct?: SupportConversationScalarFieldEnum | SupportConversationScalarFieldEnum[]
  }

  /**
   * SupportConversation findFirstOrThrow
   */
  export type SupportConversationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter, which SupportConversation to fetch.
     */
    where?: SupportConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportConversations to fetch.
     */
    orderBy?: SupportConversationOrderByWithRelationInput | SupportConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportConversations.
     */
    cursor?: SupportConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportConversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportConversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportConversations.
     */
    distinct?: SupportConversationScalarFieldEnum | SupportConversationScalarFieldEnum[]
  }

  /**
   * SupportConversation findMany
   */
  export type SupportConversationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter, which SupportConversations to fetch.
     */
    where?: SupportConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportConversations to fetch.
     */
    orderBy?: SupportConversationOrderByWithRelationInput | SupportConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupportConversations.
     */
    cursor?: SupportConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportConversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportConversations.
     */
    skip?: number
    distinct?: SupportConversationScalarFieldEnum | SupportConversationScalarFieldEnum[]
  }

  /**
   * SupportConversation create
   */
  export type SupportConversationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * The data needed to create a SupportConversation.
     */
    data: XOR<SupportConversationCreateInput, SupportConversationUncheckedCreateInput>
  }

  /**
   * SupportConversation createMany
   */
  export type SupportConversationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupportConversations.
     */
    data: SupportConversationCreateManyInput | SupportConversationCreateManyInput[]
  }

  /**
   * SupportConversation createManyAndReturn
   */
  export type SupportConversationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SupportConversations.
     */
    data: SupportConversationCreateManyInput | SupportConversationCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportConversation update
   */
  export type SupportConversationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * The data needed to update a SupportConversation.
     */
    data: XOR<SupportConversationUpdateInput, SupportConversationUncheckedUpdateInput>
    /**
     * Choose, which SupportConversation to update.
     */
    where: SupportConversationWhereUniqueInput
  }

  /**
   * SupportConversation updateMany
   */
  export type SupportConversationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupportConversations.
     */
    data: XOR<SupportConversationUpdateManyMutationInput, SupportConversationUncheckedUpdateManyInput>
    /**
     * Filter which SupportConversations to update
     */
    where?: SupportConversationWhereInput
  }

  /**
   * SupportConversation upsert
   */
  export type SupportConversationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * The filter to search for the SupportConversation to update in case it exists.
     */
    where: SupportConversationWhereUniqueInput
    /**
     * In case the SupportConversation found by the `where` argument doesn't exist, create a new SupportConversation with this data.
     */
    create: XOR<SupportConversationCreateInput, SupportConversationUncheckedCreateInput>
    /**
     * In case the SupportConversation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupportConversationUpdateInput, SupportConversationUncheckedUpdateInput>
  }

  /**
   * SupportConversation delete
   */
  export type SupportConversationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
    /**
     * Filter which SupportConversation to delete.
     */
    where: SupportConversationWhereUniqueInput
  }

  /**
   * SupportConversation deleteMany
   */
  export type SupportConversationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportConversations to delete
     */
    where?: SupportConversationWhereInput
  }

  /**
   * SupportConversation without action
   */
  export type SupportConversationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportConversation
     */
    select?: SupportConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportConversationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    passwordHash: 'passwordHash',
    role: 'role',
    profileCompleted: 'profileCompleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AnimalListingScalarFieldEnum: {
    id: 'id',
    ownerId: 'ownerId',
    species: 'species',
    breed: 'breed',
    ageEstimate: 'ageEstimate',
    gender: 'gender',
    spayedNeutered: 'spayedNeutered',
    description: 'description',
    location: 'location',
    photos: 'photos',
    healthStatus: 'healthStatus',
    vaccinationRecords: 'vaccinationRecords',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AnimalListingScalarFieldEnum = (typeof AnimalListingScalarFieldEnum)[keyof typeof AnimalListingScalarFieldEnum]


  export const AdoptionApplicationScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    applicantId: 'applicantId',
    answers: 'answers',
    status: 'status',
    submittedAt: 'submittedAt',
    reviewedAt: 'reviewedAt',
    reviewerId: 'reviewerId',
    reviewNotes: 'reviewNotes'
  };

  export type AdoptionApplicationScalarFieldEnum = (typeof AdoptionApplicationScalarFieldEnum)[keyof typeof AdoptionApplicationScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    actorId: 'actorId',
    action: 'action',
    targetType: 'targetType',
    targetId: 'targetId',
    timestamp: 'timestamp',
    notes: 'notes'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const SupportConversationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    messages: 'messages',
    status: 'status',
    createdAt: 'createdAt',
    resolvedAt: 'resolvedAt'
  };

  export type SupportConversationScalarFieldEnum = (typeof SupportConversationScalarFieldEnum)[keyof typeof SupportConversationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    passwordHash?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    profileCompleted?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    animalListings?: AnimalListingListRelationFilter
    adoptionApplications?: AdoptionApplicationListRelationFilter
    reviewedApplications?: AdoptionApplicationListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    supportConversations?: SupportConversationListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrderInput | SortOrder
    role?: SortOrder
    profileCompleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    animalListings?: AnimalListingOrderByRelationAggregateInput
    adoptionApplications?: AdoptionApplicationOrderByRelationAggregateInput
    reviewedApplications?: AdoptionApplicationOrderByRelationAggregateInput
    auditLogs?: AuditLogOrderByRelationAggregateInput
    supportConversations?: SupportConversationOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    passwordHash?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    profileCompleted?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    animalListings?: AnimalListingListRelationFilter
    adoptionApplications?: AdoptionApplicationListRelationFilter
    reviewedApplications?: AdoptionApplicationListRelationFilter
    auditLogs?: AuditLogListRelationFilter
    supportConversations?: SupportConversationListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrderInput | SortOrder
    role?: SortOrder
    profileCompleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    passwordHash?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: StringWithAggregatesFilter<"User"> | string
    profileCompleted?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type AnimalListingWhereInput = {
    AND?: AnimalListingWhereInput | AnimalListingWhereInput[]
    OR?: AnimalListingWhereInput[]
    NOT?: AnimalListingWhereInput | AnimalListingWhereInput[]
    id?: StringFilter<"AnimalListing"> | string
    ownerId?: StringFilter<"AnimalListing"> | string
    species?: StringFilter<"AnimalListing"> | string
    breed?: StringNullableFilter<"AnimalListing"> | string | null
    ageEstimate?: IntNullableFilter<"AnimalListing"> | number | null
    gender?: StringNullableFilter<"AnimalListing"> | string | null
    spayedNeutered?: BoolFilter<"AnimalListing"> | boolean
    description?: StringNullableFilter<"AnimalListing"> | string | null
    location?: StringFilter<"AnimalListing"> | string
    photos?: StringFilter<"AnimalListing"> | string
    healthStatus?: StringNullableFilter<"AnimalListing"> | string | null
    vaccinationRecords?: StringNullableFilter<"AnimalListing"> | string | null
    status?: StringFilter<"AnimalListing"> | string
    createdAt?: DateTimeFilter<"AnimalListing"> | Date | string
    updatedAt?: DateTimeFilter<"AnimalListing"> | Date | string
    owner?: XOR<UserRelationFilter, UserWhereInput>
    applications?: AdoptionApplicationListRelationFilter
  }

  export type AnimalListingOrderByWithRelationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    species?: SortOrder
    breed?: SortOrderInput | SortOrder
    ageEstimate?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    spayedNeutered?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrder
    photos?: SortOrder
    healthStatus?: SortOrderInput | SortOrder
    vaccinationRecords?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    owner?: UserOrderByWithRelationInput
    applications?: AdoptionApplicationOrderByRelationAggregateInput
  }

  export type AnimalListingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AnimalListingWhereInput | AnimalListingWhereInput[]
    OR?: AnimalListingWhereInput[]
    NOT?: AnimalListingWhereInput | AnimalListingWhereInput[]
    ownerId?: StringFilter<"AnimalListing"> | string
    species?: StringFilter<"AnimalListing"> | string
    breed?: StringNullableFilter<"AnimalListing"> | string | null
    ageEstimate?: IntNullableFilter<"AnimalListing"> | number | null
    gender?: StringNullableFilter<"AnimalListing"> | string | null
    spayedNeutered?: BoolFilter<"AnimalListing"> | boolean
    description?: StringNullableFilter<"AnimalListing"> | string | null
    location?: StringFilter<"AnimalListing"> | string
    photos?: StringFilter<"AnimalListing"> | string
    healthStatus?: StringNullableFilter<"AnimalListing"> | string | null
    vaccinationRecords?: StringNullableFilter<"AnimalListing"> | string | null
    status?: StringFilter<"AnimalListing"> | string
    createdAt?: DateTimeFilter<"AnimalListing"> | Date | string
    updatedAt?: DateTimeFilter<"AnimalListing"> | Date | string
    owner?: XOR<UserRelationFilter, UserWhereInput>
    applications?: AdoptionApplicationListRelationFilter
  }, "id">

  export type AnimalListingOrderByWithAggregationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    species?: SortOrder
    breed?: SortOrderInput | SortOrder
    ageEstimate?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    spayedNeutered?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrder
    photos?: SortOrder
    healthStatus?: SortOrderInput | SortOrder
    vaccinationRecords?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AnimalListingCountOrderByAggregateInput
    _avg?: AnimalListingAvgOrderByAggregateInput
    _max?: AnimalListingMaxOrderByAggregateInput
    _min?: AnimalListingMinOrderByAggregateInput
    _sum?: AnimalListingSumOrderByAggregateInput
  }

  export type AnimalListingScalarWhereWithAggregatesInput = {
    AND?: AnimalListingScalarWhereWithAggregatesInput | AnimalListingScalarWhereWithAggregatesInput[]
    OR?: AnimalListingScalarWhereWithAggregatesInput[]
    NOT?: AnimalListingScalarWhereWithAggregatesInput | AnimalListingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AnimalListing"> | string
    ownerId?: StringWithAggregatesFilter<"AnimalListing"> | string
    species?: StringWithAggregatesFilter<"AnimalListing"> | string
    breed?: StringNullableWithAggregatesFilter<"AnimalListing"> | string | null
    ageEstimate?: IntNullableWithAggregatesFilter<"AnimalListing"> | number | null
    gender?: StringNullableWithAggregatesFilter<"AnimalListing"> | string | null
    spayedNeutered?: BoolWithAggregatesFilter<"AnimalListing"> | boolean
    description?: StringNullableWithAggregatesFilter<"AnimalListing"> | string | null
    location?: StringWithAggregatesFilter<"AnimalListing"> | string
    photos?: StringWithAggregatesFilter<"AnimalListing"> | string
    healthStatus?: StringNullableWithAggregatesFilter<"AnimalListing"> | string | null
    vaccinationRecords?: StringNullableWithAggregatesFilter<"AnimalListing"> | string | null
    status?: StringWithAggregatesFilter<"AnimalListing"> | string
    createdAt?: DateTimeWithAggregatesFilter<"AnimalListing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AnimalListing"> | Date | string
  }

  export type AdoptionApplicationWhereInput = {
    AND?: AdoptionApplicationWhereInput | AdoptionApplicationWhereInput[]
    OR?: AdoptionApplicationWhereInput[]
    NOT?: AdoptionApplicationWhereInput | AdoptionApplicationWhereInput[]
    id?: StringFilter<"AdoptionApplication"> | string
    listingId?: StringFilter<"AdoptionApplication"> | string
    applicantId?: StringNullableFilter<"AdoptionApplication"> | string | null
    answers?: StringFilter<"AdoptionApplication"> | string
    status?: StringFilter<"AdoptionApplication"> | string
    submittedAt?: DateTimeFilter<"AdoptionApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AdoptionApplication"> | Date | string | null
    reviewerId?: StringNullableFilter<"AdoptionApplication"> | string | null
    reviewNotes?: StringNullableFilter<"AdoptionApplication"> | string | null
    listing?: XOR<AnimalListingRelationFilter, AnimalListingWhereInput>
    applicant?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    reviewer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type AdoptionApplicationOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    applicantId?: SortOrderInput | SortOrder
    answers?: SortOrder
    status?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewerId?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    listing?: AnimalListingOrderByWithRelationInput
    applicant?: UserOrderByWithRelationInput
    reviewer?: UserOrderByWithRelationInput
  }

  export type AdoptionApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdoptionApplicationWhereInput | AdoptionApplicationWhereInput[]
    OR?: AdoptionApplicationWhereInput[]
    NOT?: AdoptionApplicationWhereInput | AdoptionApplicationWhereInput[]
    listingId?: StringFilter<"AdoptionApplication"> | string
    applicantId?: StringNullableFilter<"AdoptionApplication"> | string | null
    answers?: StringFilter<"AdoptionApplication"> | string
    status?: StringFilter<"AdoptionApplication"> | string
    submittedAt?: DateTimeFilter<"AdoptionApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AdoptionApplication"> | Date | string | null
    reviewerId?: StringNullableFilter<"AdoptionApplication"> | string | null
    reviewNotes?: StringNullableFilter<"AdoptionApplication"> | string | null
    listing?: XOR<AnimalListingRelationFilter, AnimalListingWhereInput>
    applicant?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    reviewer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type AdoptionApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    applicantId?: SortOrderInput | SortOrder
    answers?: SortOrder
    status?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewerId?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    _count?: AdoptionApplicationCountOrderByAggregateInput
    _max?: AdoptionApplicationMaxOrderByAggregateInput
    _min?: AdoptionApplicationMinOrderByAggregateInput
  }

  export type AdoptionApplicationScalarWhereWithAggregatesInput = {
    AND?: AdoptionApplicationScalarWhereWithAggregatesInput | AdoptionApplicationScalarWhereWithAggregatesInput[]
    OR?: AdoptionApplicationScalarWhereWithAggregatesInput[]
    NOT?: AdoptionApplicationScalarWhereWithAggregatesInput | AdoptionApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdoptionApplication"> | string
    listingId?: StringWithAggregatesFilter<"AdoptionApplication"> | string
    applicantId?: StringNullableWithAggregatesFilter<"AdoptionApplication"> | string | null
    answers?: StringWithAggregatesFilter<"AdoptionApplication"> | string
    status?: StringWithAggregatesFilter<"AdoptionApplication"> | string
    submittedAt?: DateTimeWithAggregatesFilter<"AdoptionApplication"> | Date | string
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"AdoptionApplication"> | Date | string | null
    reviewerId?: StringNullableWithAggregatesFilter<"AdoptionApplication"> | string | null
    reviewNotes?: StringNullableWithAggregatesFilter<"AdoptionApplication"> | string | null
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    actorId?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    targetType?: StringFilter<"AuditLog"> | string
    targetId?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
    notes?: StringNullableFilter<"AuditLog"> | string | null
    actor?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    actorId?: SortOrder
    action?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    timestamp?: SortOrder
    notes?: SortOrderInput | SortOrder
    actor?: UserOrderByWithRelationInput
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    actorId?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    targetType?: StringFilter<"AuditLog"> | string
    targetId?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
    notes?: StringNullableFilter<"AuditLog"> | string | null
    actor?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    actorId?: SortOrder
    action?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    timestamp?: SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    actorId?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    targetType?: StringWithAggregatesFilter<"AuditLog"> | string
    targetId?: StringWithAggregatesFilter<"AuditLog"> | string
    timestamp?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
  }

  export type SupportConversationWhereInput = {
    AND?: SupportConversationWhereInput | SupportConversationWhereInput[]
    OR?: SupportConversationWhereInput[]
    NOT?: SupportConversationWhereInput | SupportConversationWhereInput[]
    id?: StringFilter<"SupportConversation"> | string
    userId?: StringFilter<"SupportConversation"> | string
    messages?: StringFilter<"SupportConversation"> | string
    status?: StringFilter<"SupportConversation"> | string
    createdAt?: DateTimeFilter<"SupportConversation"> | Date | string
    resolvedAt?: DateTimeNullableFilter<"SupportConversation"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SupportConversationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    messages?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SupportConversationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupportConversationWhereInput | SupportConversationWhereInput[]
    OR?: SupportConversationWhereInput[]
    NOT?: SupportConversationWhereInput | SupportConversationWhereInput[]
    userId?: StringFilter<"SupportConversation"> | string
    messages?: StringFilter<"SupportConversation"> | string
    status?: StringFilter<"SupportConversation"> | string
    createdAt?: DateTimeFilter<"SupportConversation"> | Date | string
    resolvedAt?: DateTimeNullableFilter<"SupportConversation"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SupportConversationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    messages?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    _count?: SupportConversationCountOrderByAggregateInput
    _max?: SupportConversationMaxOrderByAggregateInput
    _min?: SupportConversationMinOrderByAggregateInput
  }

  export type SupportConversationScalarWhereWithAggregatesInput = {
    AND?: SupportConversationScalarWhereWithAggregatesInput | SupportConversationScalarWhereWithAggregatesInput[]
    OR?: SupportConversationScalarWhereWithAggregatesInput[]
    NOT?: SupportConversationScalarWhereWithAggregatesInput | SupportConversationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupportConversation"> | string
    userId?: StringWithAggregatesFilter<"SupportConversation"> | string
    messages?: StringWithAggregatesFilter<"SupportConversation"> | string
    status?: StringWithAggregatesFilter<"SupportConversation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"SupportConversation"> | Date | string
    resolvedAt?: DateTimeNullableWithAggregatesFilter<"SupportConversation"> | Date | string | null
  }

  export type UserCreateInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingUncheckedCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AnimalListingCreateInput = {
    id?: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: UserCreateNestedOneWithoutAnimalListingsInput
    applications?: AdoptionApplicationCreateNestedManyWithoutListingInput
  }

  export type AnimalListingUncheckedCreateInput = {
    id?: string
    ownerId: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: AdoptionApplicationUncheckedCreateNestedManyWithoutListingInput
  }

  export type AnimalListingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneRequiredWithoutAnimalListingsNestedInput
    applications?: AdoptionApplicationUpdateManyWithoutListingNestedInput
  }

  export type AnimalListingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: AdoptionApplicationUncheckedUpdateManyWithoutListingNestedInput
  }

  export type AnimalListingCreateManyInput = {
    id?: string
    ownerId: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AnimalListingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AnimalListingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdoptionApplicationCreateInput = {
    id?: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    listing: AnimalListingCreateNestedOneWithoutApplicationsInput
    applicant?: UserCreateNestedOneWithoutAdoptionApplicationsInput
    reviewer?: UserCreateNestedOneWithoutReviewedApplicationsInput
  }

  export type AdoptionApplicationUncheckedCreateInput = {
    id?: string
    listingId: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: AnimalListingUpdateOneRequiredWithoutApplicationsNestedInput
    applicant?: UserUpdateOneWithoutAdoptionApplicationsNestedInput
    reviewer?: UserUpdateOneWithoutReviewedApplicationsNestedInput
  }

  export type AdoptionApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationCreateManyInput = {
    id?: string
    listingId: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogCreateInput = {
    id?: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
    actor: UserCreateNestedOneWithoutAuditLogsInput
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    actorId: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    actor?: UserUpdateOneRequiredWithoutAuditLogsNestedInput
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    actorId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogCreateManyInput = {
    id?: string
    actorId: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    actorId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportConversationCreateInput = {
    id?: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
    user: UserCreateNestedOneWithoutSupportConversationsInput
  }

  export type SupportConversationUncheckedCreateInput = {
    id?: string
    userId: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
  }

  export type SupportConversationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutSupportConversationsNestedInput
  }

  export type SupportConversationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SupportConversationCreateManyInput = {
    id?: string
    userId: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
  }

  export type SupportConversationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SupportConversationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AnimalListingListRelationFilter = {
    every?: AnimalListingWhereInput
    some?: AnimalListingWhereInput
    none?: AnimalListingWhereInput
  }

  export type AdoptionApplicationListRelationFilter = {
    every?: AdoptionApplicationWhereInput
    some?: AdoptionApplicationWhereInput
    none?: AdoptionApplicationWhereInput
  }

  export type AuditLogListRelationFilter = {
    every?: AuditLogWhereInput
    some?: AuditLogWhereInput
    none?: AuditLogWhereInput
  }

  export type SupportConversationListRelationFilter = {
    every?: SupportConversationWhereInput
    some?: SupportConversationWhereInput
    none?: SupportConversationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AnimalListingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdoptionApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuditLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupportConversationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    profileCompleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    profileCompleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    profileCompleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AnimalListingCountOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    species?: SortOrder
    breed?: SortOrder
    ageEstimate?: SortOrder
    gender?: SortOrder
    spayedNeutered?: SortOrder
    description?: SortOrder
    location?: SortOrder
    photos?: SortOrder
    healthStatus?: SortOrder
    vaccinationRecords?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AnimalListingAvgOrderByAggregateInput = {
    ageEstimate?: SortOrder
  }

  export type AnimalListingMaxOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    species?: SortOrder
    breed?: SortOrder
    ageEstimate?: SortOrder
    gender?: SortOrder
    spayedNeutered?: SortOrder
    description?: SortOrder
    location?: SortOrder
    photos?: SortOrder
    healthStatus?: SortOrder
    vaccinationRecords?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AnimalListingMinOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    species?: SortOrder
    breed?: SortOrder
    ageEstimate?: SortOrder
    gender?: SortOrder
    spayedNeutered?: SortOrder
    description?: SortOrder
    location?: SortOrder
    photos?: SortOrder
    healthStatus?: SortOrder
    vaccinationRecords?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AnimalListingSumOrderByAggregateInput = {
    ageEstimate?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AnimalListingRelationFilter = {
    is?: AnimalListingWhereInput
    isNot?: AnimalListingWhereInput
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type AdoptionApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    applicantId?: SortOrder
    answers?: SortOrder
    status?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewerId?: SortOrder
    reviewNotes?: SortOrder
  }

  export type AdoptionApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    applicantId?: SortOrder
    answers?: SortOrder
    status?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewerId?: SortOrder
    reviewNotes?: SortOrder
  }

  export type AdoptionApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    applicantId?: SortOrder
    answers?: SortOrder
    status?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewerId?: SortOrder
    reviewNotes?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    actorId?: SortOrder
    action?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    timestamp?: SortOrder
    notes?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    actorId?: SortOrder
    action?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    timestamp?: SortOrder
    notes?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    actorId?: SortOrder
    action?: SortOrder
    targetType?: SortOrder
    targetId?: SortOrder
    timestamp?: SortOrder
    notes?: SortOrder
  }

  export type SupportConversationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    messages?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    resolvedAt?: SortOrder
  }

  export type SupportConversationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    messages?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    resolvedAt?: SortOrder
  }

  export type SupportConversationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    messages?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    resolvedAt?: SortOrder
  }

  export type AnimalListingCreateNestedManyWithoutOwnerInput = {
    create?: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput> | AnimalListingCreateWithoutOwnerInput[] | AnimalListingUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: AnimalListingCreateOrConnectWithoutOwnerInput | AnimalListingCreateOrConnectWithoutOwnerInput[]
    createMany?: AnimalListingCreateManyOwnerInputEnvelope
    connect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
  }

  export type AdoptionApplicationCreateNestedManyWithoutApplicantInput = {
    create?: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput> | AdoptionApplicationCreateWithoutApplicantInput[] | AdoptionApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutApplicantInput | AdoptionApplicationCreateOrConnectWithoutApplicantInput[]
    createMany?: AdoptionApplicationCreateManyApplicantInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type AdoptionApplicationCreateNestedManyWithoutReviewerInput = {
    create?: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput> | AdoptionApplicationCreateWithoutReviewerInput[] | AdoptionApplicationUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutReviewerInput | AdoptionApplicationCreateOrConnectWithoutReviewerInput[]
    createMany?: AdoptionApplicationCreateManyReviewerInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type AuditLogCreateNestedManyWithoutActorInput = {
    create?: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput> | AuditLogCreateWithoutActorInput[] | AuditLogUncheckedCreateWithoutActorInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutActorInput | AuditLogCreateOrConnectWithoutActorInput[]
    createMany?: AuditLogCreateManyActorInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type SupportConversationCreateNestedManyWithoutUserInput = {
    create?: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput> | SupportConversationCreateWithoutUserInput[] | SupportConversationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupportConversationCreateOrConnectWithoutUserInput | SupportConversationCreateOrConnectWithoutUserInput[]
    createMany?: SupportConversationCreateManyUserInputEnvelope
    connect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
  }

  export type AnimalListingUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput> | AnimalListingCreateWithoutOwnerInput[] | AnimalListingUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: AnimalListingCreateOrConnectWithoutOwnerInput | AnimalListingCreateOrConnectWithoutOwnerInput[]
    createMany?: AnimalListingCreateManyOwnerInputEnvelope
    connect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
  }

  export type AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput = {
    create?: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput> | AdoptionApplicationCreateWithoutApplicantInput[] | AdoptionApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutApplicantInput | AdoptionApplicationCreateOrConnectWithoutApplicantInput[]
    createMany?: AdoptionApplicationCreateManyApplicantInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput = {
    create?: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput> | AdoptionApplicationCreateWithoutReviewerInput[] | AdoptionApplicationUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutReviewerInput | AdoptionApplicationCreateOrConnectWithoutReviewerInput[]
    createMany?: AdoptionApplicationCreateManyReviewerInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type AuditLogUncheckedCreateNestedManyWithoutActorInput = {
    create?: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput> | AuditLogCreateWithoutActorInput[] | AuditLogUncheckedCreateWithoutActorInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutActorInput | AuditLogCreateOrConnectWithoutActorInput[]
    createMany?: AuditLogCreateManyActorInputEnvelope
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
  }

  export type SupportConversationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput> | SupportConversationCreateWithoutUserInput[] | SupportConversationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupportConversationCreateOrConnectWithoutUserInput | SupportConversationCreateOrConnectWithoutUserInput[]
    createMany?: SupportConversationCreateManyUserInputEnvelope
    connect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type AnimalListingUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput> | AnimalListingCreateWithoutOwnerInput[] | AnimalListingUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: AnimalListingCreateOrConnectWithoutOwnerInput | AnimalListingCreateOrConnectWithoutOwnerInput[]
    upsert?: AnimalListingUpsertWithWhereUniqueWithoutOwnerInput | AnimalListingUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: AnimalListingCreateManyOwnerInputEnvelope
    set?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    disconnect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    delete?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    connect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    update?: AnimalListingUpdateWithWhereUniqueWithoutOwnerInput | AnimalListingUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: AnimalListingUpdateManyWithWhereWithoutOwnerInput | AnimalListingUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: AnimalListingScalarWhereInput | AnimalListingScalarWhereInput[]
  }

  export type AdoptionApplicationUpdateManyWithoutApplicantNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput> | AdoptionApplicationCreateWithoutApplicantInput[] | AdoptionApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutApplicantInput | AdoptionApplicationCreateOrConnectWithoutApplicantInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutApplicantInput | AdoptionApplicationUpsertWithWhereUniqueWithoutApplicantInput[]
    createMany?: AdoptionApplicationCreateManyApplicantInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutApplicantInput | AdoptionApplicationUpdateWithWhereUniqueWithoutApplicantInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutApplicantInput | AdoptionApplicationUpdateManyWithWhereWithoutApplicantInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AdoptionApplicationUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput> | AdoptionApplicationCreateWithoutReviewerInput[] | AdoptionApplicationUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutReviewerInput | AdoptionApplicationCreateOrConnectWithoutReviewerInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutReviewerInput | AdoptionApplicationUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: AdoptionApplicationCreateManyReviewerInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutReviewerInput | AdoptionApplicationUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutReviewerInput | AdoptionApplicationUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AuditLogUpdateManyWithoutActorNestedInput = {
    create?: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput> | AuditLogCreateWithoutActorInput[] | AuditLogUncheckedCreateWithoutActorInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutActorInput | AuditLogCreateOrConnectWithoutActorInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutActorInput | AuditLogUpsertWithWhereUniqueWithoutActorInput[]
    createMany?: AuditLogCreateManyActorInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutActorInput | AuditLogUpdateWithWhereUniqueWithoutActorInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutActorInput | AuditLogUpdateManyWithWhereWithoutActorInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type SupportConversationUpdateManyWithoutUserNestedInput = {
    create?: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput> | SupportConversationCreateWithoutUserInput[] | SupportConversationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupportConversationCreateOrConnectWithoutUserInput | SupportConversationCreateOrConnectWithoutUserInput[]
    upsert?: SupportConversationUpsertWithWhereUniqueWithoutUserInput | SupportConversationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SupportConversationCreateManyUserInputEnvelope
    set?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    disconnect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    delete?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    connect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    update?: SupportConversationUpdateWithWhereUniqueWithoutUserInput | SupportConversationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SupportConversationUpdateManyWithWhereWithoutUserInput | SupportConversationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SupportConversationScalarWhereInput | SupportConversationScalarWhereInput[]
  }

  export type AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput> | AnimalListingCreateWithoutOwnerInput[] | AnimalListingUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: AnimalListingCreateOrConnectWithoutOwnerInput | AnimalListingCreateOrConnectWithoutOwnerInput[]
    upsert?: AnimalListingUpsertWithWhereUniqueWithoutOwnerInput | AnimalListingUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: AnimalListingCreateManyOwnerInputEnvelope
    set?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    disconnect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    delete?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    connect?: AnimalListingWhereUniqueInput | AnimalListingWhereUniqueInput[]
    update?: AnimalListingUpdateWithWhereUniqueWithoutOwnerInput | AnimalListingUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: AnimalListingUpdateManyWithWhereWithoutOwnerInput | AnimalListingUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: AnimalListingScalarWhereInput | AnimalListingScalarWhereInput[]
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput> | AdoptionApplicationCreateWithoutApplicantInput[] | AdoptionApplicationUncheckedCreateWithoutApplicantInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutApplicantInput | AdoptionApplicationCreateOrConnectWithoutApplicantInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutApplicantInput | AdoptionApplicationUpsertWithWhereUniqueWithoutApplicantInput[]
    createMany?: AdoptionApplicationCreateManyApplicantInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutApplicantInput | AdoptionApplicationUpdateWithWhereUniqueWithoutApplicantInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutApplicantInput | AdoptionApplicationUpdateManyWithWhereWithoutApplicantInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput> | AdoptionApplicationCreateWithoutReviewerInput[] | AdoptionApplicationUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutReviewerInput | AdoptionApplicationCreateOrConnectWithoutReviewerInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutReviewerInput | AdoptionApplicationUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: AdoptionApplicationCreateManyReviewerInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutReviewerInput | AdoptionApplicationUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutReviewerInput | AdoptionApplicationUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AuditLogUncheckedUpdateManyWithoutActorNestedInput = {
    create?: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput> | AuditLogCreateWithoutActorInput[] | AuditLogUncheckedCreateWithoutActorInput[]
    connectOrCreate?: AuditLogCreateOrConnectWithoutActorInput | AuditLogCreateOrConnectWithoutActorInput[]
    upsert?: AuditLogUpsertWithWhereUniqueWithoutActorInput | AuditLogUpsertWithWhereUniqueWithoutActorInput[]
    createMany?: AuditLogCreateManyActorInputEnvelope
    set?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    disconnect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    delete?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    connect?: AuditLogWhereUniqueInput | AuditLogWhereUniqueInput[]
    update?: AuditLogUpdateWithWhereUniqueWithoutActorInput | AuditLogUpdateWithWhereUniqueWithoutActorInput[]
    updateMany?: AuditLogUpdateManyWithWhereWithoutActorInput | AuditLogUpdateManyWithWhereWithoutActorInput[]
    deleteMany?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
  }

  export type SupportConversationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput> | SupportConversationCreateWithoutUserInput[] | SupportConversationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SupportConversationCreateOrConnectWithoutUserInput | SupportConversationCreateOrConnectWithoutUserInput[]
    upsert?: SupportConversationUpsertWithWhereUniqueWithoutUserInput | SupportConversationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SupportConversationCreateManyUserInputEnvelope
    set?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    disconnect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    delete?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    connect?: SupportConversationWhereUniqueInput | SupportConversationWhereUniqueInput[]
    update?: SupportConversationUpdateWithWhereUniqueWithoutUserInput | SupportConversationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SupportConversationUpdateManyWithWhereWithoutUserInput | SupportConversationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SupportConversationScalarWhereInput | SupportConversationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAnimalListingsInput = {
    create?: XOR<UserCreateWithoutAnimalListingsInput, UserUncheckedCreateWithoutAnimalListingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnimalListingsInput
    connect?: UserWhereUniqueInput
  }

  export type AdoptionApplicationCreateNestedManyWithoutListingInput = {
    create?: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput> | AdoptionApplicationCreateWithoutListingInput[] | AdoptionApplicationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutListingInput | AdoptionApplicationCreateOrConnectWithoutListingInput[]
    createMany?: AdoptionApplicationCreateManyListingInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type AdoptionApplicationUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput> | AdoptionApplicationCreateWithoutListingInput[] | AdoptionApplicationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutListingInput | AdoptionApplicationCreateOrConnectWithoutListingInput[]
    createMany?: AdoptionApplicationCreateManyListingInputEnvelope
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAnimalListingsNestedInput = {
    create?: XOR<UserCreateWithoutAnimalListingsInput, UserUncheckedCreateWithoutAnimalListingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnimalListingsInput
    upsert?: UserUpsertWithoutAnimalListingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAnimalListingsInput, UserUpdateWithoutAnimalListingsInput>, UserUncheckedUpdateWithoutAnimalListingsInput>
  }

  export type AdoptionApplicationUpdateManyWithoutListingNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput> | AdoptionApplicationCreateWithoutListingInput[] | AdoptionApplicationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutListingInput | AdoptionApplicationCreateOrConnectWithoutListingInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutListingInput | AdoptionApplicationUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: AdoptionApplicationCreateManyListingInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutListingInput | AdoptionApplicationUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutListingInput | AdoptionApplicationUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput> | AdoptionApplicationCreateWithoutListingInput[] | AdoptionApplicationUncheckedCreateWithoutListingInput[]
    connectOrCreate?: AdoptionApplicationCreateOrConnectWithoutListingInput | AdoptionApplicationCreateOrConnectWithoutListingInput[]
    upsert?: AdoptionApplicationUpsertWithWhereUniqueWithoutListingInput | AdoptionApplicationUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: AdoptionApplicationCreateManyListingInputEnvelope
    set?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    disconnect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    delete?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    connect?: AdoptionApplicationWhereUniqueInput | AdoptionApplicationWhereUniqueInput[]
    update?: AdoptionApplicationUpdateWithWhereUniqueWithoutListingInput | AdoptionApplicationUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: AdoptionApplicationUpdateManyWithWhereWithoutListingInput | AdoptionApplicationUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
  }

  export type AnimalListingCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<AnimalListingCreateWithoutApplicationsInput, AnimalListingUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: AnimalListingCreateOrConnectWithoutApplicationsInput
    connect?: AnimalListingWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAdoptionApplicationsInput = {
    create?: XOR<UserCreateWithoutAdoptionApplicationsInput, UserUncheckedCreateWithoutAdoptionApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdoptionApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedApplicationsInput = {
    create?: XOR<UserCreateWithoutReviewedApplicationsInput, UserUncheckedCreateWithoutReviewedApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type AnimalListingUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<AnimalListingCreateWithoutApplicationsInput, AnimalListingUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: AnimalListingCreateOrConnectWithoutApplicationsInput
    upsert?: AnimalListingUpsertWithoutApplicationsInput
    connect?: AnimalListingWhereUniqueInput
    update?: XOR<XOR<AnimalListingUpdateToOneWithWhereWithoutApplicationsInput, AnimalListingUpdateWithoutApplicationsInput>, AnimalListingUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateOneWithoutAdoptionApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutAdoptionApplicationsInput, UserUncheckedCreateWithoutAdoptionApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdoptionApplicationsInput
    upsert?: UserUpsertWithoutAdoptionApplicationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdoptionApplicationsInput, UserUpdateWithoutAdoptionApplicationsInput>, UserUncheckedUpdateWithoutAdoptionApplicationsInput>
  }

  export type UserUpdateOneWithoutReviewedApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedApplicationsInput, UserUncheckedCreateWithoutReviewedApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedApplicationsInput
    upsert?: UserUpsertWithoutReviewedApplicationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedApplicationsInput, UserUpdateWithoutReviewedApplicationsInput>, UserUncheckedUpdateWithoutReviewedApplicationsInput>
  }

  export type UserCreateNestedOneWithoutAuditLogsInput = {
    create?: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAuditLogsNestedInput = {
    create?: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditLogsInput
    upsert?: UserUpsertWithoutAuditLogsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditLogsInput, UserUpdateWithoutAuditLogsInput>, UserUncheckedUpdateWithoutAuditLogsInput>
  }

  export type UserCreateNestedOneWithoutSupportConversationsInput = {
    create?: XOR<UserCreateWithoutSupportConversationsInput, UserUncheckedCreateWithoutSupportConversationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSupportConversationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSupportConversationsNestedInput = {
    create?: XOR<UserCreateWithoutSupportConversationsInput, UserUncheckedCreateWithoutSupportConversationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSupportConversationsInput
    upsert?: UserUpsertWithoutSupportConversationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSupportConversationsInput, UserUpdateWithoutSupportConversationsInput>, UserUncheckedUpdateWithoutSupportConversationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type AnimalListingCreateWithoutOwnerInput = {
    id?: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: AdoptionApplicationCreateNestedManyWithoutListingInput
  }

  export type AnimalListingUncheckedCreateWithoutOwnerInput = {
    id?: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: AdoptionApplicationUncheckedCreateNestedManyWithoutListingInput
  }

  export type AnimalListingCreateOrConnectWithoutOwnerInput = {
    where: AnimalListingWhereUniqueInput
    create: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput>
  }

  export type AnimalListingCreateManyOwnerInputEnvelope = {
    data: AnimalListingCreateManyOwnerInput | AnimalListingCreateManyOwnerInput[]
  }

  export type AdoptionApplicationCreateWithoutApplicantInput = {
    id?: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    listing: AnimalListingCreateNestedOneWithoutApplicationsInput
    reviewer?: UserCreateNestedOneWithoutReviewedApplicationsInput
  }

  export type AdoptionApplicationUncheckedCreateWithoutApplicantInput = {
    id?: string
    listingId: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationCreateOrConnectWithoutApplicantInput = {
    where: AdoptionApplicationWhereUniqueInput
    create: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput>
  }

  export type AdoptionApplicationCreateManyApplicantInputEnvelope = {
    data: AdoptionApplicationCreateManyApplicantInput | AdoptionApplicationCreateManyApplicantInput[]
  }

  export type AdoptionApplicationCreateWithoutReviewerInput = {
    id?: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    listing: AnimalListingCreateNestedOneWithoutApplicationsInput
    applicant?: UserCreateNestedOneWithoutAdoptionApplicationsInput
  }

  export type AdoptionApplicationUncheckedCreateWithoutReviewerInput = {
    id?: string
    listingId: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationCreateOrConnectWithoutReviewerInput = {
    where: AdoptionApplicationWhereUniqueInput
    create: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput>
  }

  export type AdoptionApplicationCreateManyReviewerInputEnvelope = {
    data: AdoptionApplicationCreateManyReviewerInput | AdoptionApplicationCreateManyReviewerInput[]
  }

  export type AuditLogCreateWithoutActorInput = {
    id?: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
  }

  export type AuditLogUncheckedCreateWithoutActorInput = {
    id?: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
  }

  export type AuditLogCreateOrConnectWithoutActorInput = {
    where: AuditLogWhereUniqueInput
    create: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput>
  }

  export type AuditLogCreateManyActorInputEnvelope = {
    data: AuditLogCreateManyActorInput | AuditLogCreateManyActorInput[]
  }

  export type SupportConversationCreateWithoutUserInput = {
    id?: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
  }

  export type SupportConversationUncheckedCreateWithoutUserInput = {
    id?: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
  }

  export type SupportConversationCreateOrConnectWithoutUserInput = {
    where: SupportConversationWhereUniqueInput
    create: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput>
  }

  export type SupportConversationCreateManyUserInputEnvelope = {
    data: SupportConversationCreateManyUserInput | SupportConversationCreateManyUserInput[]
  }

  export type AnimalListingUpsertWithWhereUniqueWithoutOwnerInput = {
    where: AnimalListingWhereUniqueInput
    update: XOR<AnimalListingUpdateWithoutOwnerInput, AnimalListingUncheckedUpdateWithoutOwnerInput>
    create: XOR<AnimalListingCreateWithoutOwnerInput, AnimalListingUncheckedCreateWithoutOwnerInput>
  }

  export type AnimalListingUpdateWithWhereUniqueWithoutOwnerInput = {
    where: AnimalListingWhereUniqueInput
    data: XOR<AnimalListingUpdateWithoutOwnerInput, AnimalListingUncheckedUpdateWithoutOwnerInput>
  }

  export type AnimalListingUpdateManyWithWhereWithoutOwnerInput = {
    where: AnimalListingScalarWhereInput
    data: XOR<AnimalListingUpdateManyMutationInput, AnimalListingUncheckedUpdateManyWithoutOwnerInput>
  }

  export type AnimalListingScalarWhereInput = {
    AND?: AnimalListingScalarWhereInput | AnimalListingScalarWhereInput[]
    OR?: AnimalListingScalarWhereInput[]
    NOT?: AnimalListingScalarWhereInput | AnimalListingScalarWhereInput[]
    id?: StringFilter<"AnimalListing"> | string
    ownerId?: StringFilter<"AnimalListing"> | string
    species?: StringFilter<"AnimalListing"> | string
    breed?: StringNullableFilter<"AnimalListing"> | string | null
    ageEstimate?: IntNullableFilter<"AnimalListing"> | number | null
    gender?: StringNullableFilter<"AnimalListing"> | string | null
    spayedNeutered?: BoolFilter<"AnimalListing"> | boolean
    description?: StringNullableFilter<"AnimalListing"> | string | null
    location?: StringFilter<"AnimalListing"> | string
    photos?: StringFilter<"AnimalListing"> | string
    healthStatus?: StringNullableFilter<"AnimalListing"> | string | null
    vaccinationRecords?: StringNullableFilter<"AnimalListing"> | string | null
    status?: StringFilter<"AnimalListing"> | string
    createdAt?: DateTimeFilter<"AnimalListing"> | Date | string
    updatedAt?: DateTimeFilter<"AnimalListing"> | Date | string
  }

  export type AdoptionApplicationUpsertWithWhereUniqueWithoutApplicantInput = {
    where: AdoptionApplicationWhereUniqueInput
    update: XOR<AdoptionApplicationUpdateWithoutApplicantInput, AdoptionApplicationUncheckedUpdateWithoutApplicantInput>
    create: XOR<AdoptionApplicationCreateWithoutApplicantInput, AdoptionApplicationUncheckedCreateWithoutApplicantInput>
  }

  export type AdoptionApplicationUpdateWithWhereUniqueWithoutApplicantInput = {
    where: AdoptionApplicationWhereUniqueInput
    data: XOR<AdoptionApplicationUpdateWithoutApplicantInput, AdoptionApplicationUncheckedUpdateWithoutApplicantInput>
  }

  export type AdoptionApplicationUpdateManyWithWhereWithoutApplicantInput = {
    where: AdoptionApplicationScalarWhereInput
    data: XOR<AdoptionApplicationUpdateManyMutationInput, AdoptionApplicationUncheckedUpdateManyWithoutApplicantInput>
  }

  export type AdoptionApplicationScalarWhereInput = {
    AND?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
    OR?: AdoptionApplicationScalarWhereInput[]
    NOT?: AdoptionApplicationScalarWhereInput | AdoptionApplicationScalarWhereInput[]
    id?: StringFilter<"AdoptionApplication"> | string
    listingId?: StringFilter<"AdoptionApplication"> | string
    applicantId?: StringNullableFilter<"AdoptionApplication"> | string | null
    answers?: StringFilter<"AdoptionApplication"> | string
    status?: StringFilter<"AdoptionApplication"> | string
    submittedAt?: DateTimeFilter<"AdoptionApplication"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AdoptionApplication"> | Date | string | null
    reviewerId?: StringNullableFilter<"AdoptionApplication"> | string | null
    reviewNotes?: StringNullableFilter<"AdoptionApplication"> | string | null
  }

  export type AdoptionApplicationUpsertWithWhereUniqueWithoutReviewerInput = {
    where: AdoptionApplicationWhereUniqueInput
    update: XOR<AdoptionApplicationUpdateWithoutReviewerInput, AdoptionApplicationUncheckedUpdateWithoutReviewerInput>
    create: XOR<AdoptionApplicationCreateWithoutReviewerInput, AdoptionApplicationUncheckedCreateWithoutReviewerInput>
  }

  export type AdoptionApplicationUpdateWithWhereUniqueWithoutReviewerInput = {
    where: AdoptionApplicationWhereUniqueInput
    data: XOR<AdoptionApplicationUpdateWithoutReviewerInput, AdoptionApplicationUncheckedUpdateWithoutReviewerInput>
  }

  export type AdoptionApplicationUpdateManyWithWhereWithoutReviewerInput = {
    where: AdoptionApplicationScalarWhereInput
    data: XOR<AdoptionApplicationUpdateManyMutationInput, AdoptionApplicationUncheckedUpdateManyWithoutReviewerInput>
  }

  export type AuditLogUpsertWithWhereUniqueWithoutActorInput = {
    where: AuditLogWhereUniqueInput
    update: XOR<AuditLogUpdateWithoutActorInput, AuditLogUncheckedUpdateWithoutActorInput>
    create: XOR<AuditLogCreateWithoutActorInput, AuditLogUncheckedCreateWithoutActorInput>
  }

  export type AuditLogUpdateWithWhereUniqueWithoutActorInput = {
    where: AuditLogWhereUniqueInput
    data: XOR<AuditLogUpdateWithoutActorInput, AuditLogUncheckedUpdateWithoutActorInput>
  }

  export type AuditLogUpdateManyWithWhereWithoutActorInput = {
    where: AuditLogScalarWhereInput
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyWithoutActorInput>
  }

  export type AuditLogScalarWhereInput = {
    AND?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    OR?: AuditLogScalarWhereInput[]
    NOT?: AuditLogScalarWhereInput | AuditLogScalarWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    actorId?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    targetType?: StringFilter<"AuditLog"> | string
    targetId?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
    notes?: StringNullableFilter<"AuditLog"> | string | null
  }

  export type SupportConversationUpsertWithWhereUniqueWithoutUserInput = {
    where: SupportConversationWhereUniqueInput
    update: XOR<SupportConversationUpdateWithoutUserInput, SupportConversationUncheckedUpdateWithoutUserInput>
    create: XOR<SupportConversationCreateWithoutUserInput, SupportConversationUncheckedCreateWithoutUserInput>
  }

  export type SupportConversationUpdateWithWhereUniqueWithoutUserInput = {
    where: SupportConversationWhereUniqueInput
    data: XOR<SupportConversationUpdateWithoutUserInput, SupportConversationUncheckedUpdateWithoutUserInput>
  }

  export type SupportConversationUpdateManyWithWhereWithoutUserInput = {
    where: SupportConversationScalarWhereInput
    data: XOR<SupportConversationUpdateManyMutationInput, SupportConversationUncheckedUpdateManyWithoutUserInput>
  }

  export type SupportConversationScalarWhereInput = {
    AND?: SupportConversationScalarWhereInput | SupportConversationScalarWhereInput[]
    OR?: SupportConversationScalarWhereInput[]
    NOT?: SupportConversationScalarWhereInput | SupportConversationScalarWhereInput[]
    id?: StringFilter<"SupportConversation"> | string
    userId?: StringFilter<"SupportConversation"> | string
    messages?: StringFilter<"SupportConversation"> | string
    status?: StringFilter<"SupportConversation"> | string
    createdAt?: DateTimeFilter<"SupportConversation"> | Date | string
    resolvedAt?: DateTimeNullableFilter<"SupportConversation"> | Date | string | null
  }

  export type UserCreateWithoutAnimalListingsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    adoptionApplications?: AdoptionApplicationCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAnimalListingsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    adoptionApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAnimalListingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAnimalListingsInput, UserUncheckedCreateWithoutAnimalListingsInput>
  }

  export type AdoptionApplicationCreateWithoutListingInput = {
    id?: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    applicant?: UserCreateNestedOneWithoutAdoptionApplicationsInput
    reviewer?: UserCreateNestedOneWithoutReviewedApplicationsInput
  }

  export type AdoptionApplicationUncheckedCreateWithoutListingInput = {
    id?: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationCreateOrConnectWithoutListingInput = {
    where: AdoptionApplicationWhereUniqueInput
    create: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput>
  }

  export type AdoptionApplicationCreateManyListingInputEnvelope = {
    data: AdoptionApplicationCreateManyListingInput | AdoptionApplicationCreateManyListingInput[]
  }

  export type UserUpsertWithoutAnimalListingsInput = {
    update: XOR<UserUpdateWithoutAnimalListingsInput, UserUncheckedUpdateWithoutAnimalListingsInput>
    create: XOR<UserCreateWithoutAnimalListingsInput, UserUncheckedCreateWithoutAnimalListingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAnimalListingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAnimalListingsInput, UserUncheckedUpdateWithoutAnimalListingsInput>
  }

  export type UserUpdateWithoutAnimalListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adoptionApplications?: AdoptionApplicationUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAnimalListingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adoptionApplications?: AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AdoptionApplicationUpsertWithWhereUniqueWithoutListingInput = {
    where: AdoptionApplicationWhereUniqueInput
    update: XOR<AdoptionApplicationUpdateWithoutListingInput, AdoptionApplicationUncheckedUpdateWithoutListingInput>
    create: XOR<AdoptionApplicationCreateWithoutListingInput, AdoptionApplicationUncheckedCreateWithoutListingInput>
  }

  export type AdoptionApplicationUpdateWithWhereUniqueWithoutListingInput = {
    where: AdoptionApplicationWhereUniqueInput
    data: XOR<AdoptionApplicationUpdateWithoutListingInput, AdoptionApplicationUncheckedUpdateWithoutListingInput>
  }

  export type AdoptionApplicationUpdateManyWithWhereWithoutListingInput = {
    where: AdoptionApplicationScalarWhereInput
    data: XOR<AdoptionApplicationUpdateManyMutationInput, AdoptionApplicationUncheckedUpdateManyWithoutListingInput>
  }

  export type AnimalListingCreateWithoutApplicationsInput = {
    id?: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    owner: UserCreateNestedOneWithoutAnimalListingsInput
  }

  export type AnimalListingUncheckedCreateWithoutApplicationsInput = {
    id?: string
    ownerId: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AnimalListingCreateOrConnectWithoutApplicationsInput = {
    where: AnimalListingWhereUniqueInput
    create: XOR<AnimalListingCreateWithoutApplicationsInput, AnimalListingUncheckedCreateWithoutApplicationsInput>
  }

  export type UserCreateWithoutAdoptionApplicationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingCreateNestedManyWithoutOwnerInput
    reviewedApplications?: AdoptionApplicationCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAdoptionApplicationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingUncheckedCreateNestedManyWithoutOwnerInput
    reviewedApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAdoptionApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdoptionApplicationsInput, UserUncheckedCreateWithoutAdoptionApplicationsInput>
  }

  export type UserCreateWithoutReviewedApplicationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationCreateNestedManyWithoutApplicantInput
    auditLogs?: AuditLogCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReviewedApplicationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingUncheckedCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutActorInput
    supportConversations?: SupportConversationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReviewedApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedApplicationsInput, UserUncheckedCreateWithoutReviewedApplicationsInput>
  }

  export type AnimalListingUpsertWithoutApplicationsInput = {
    update: XOR<AnimalListingUpdateWithoutApplicationsInput, AnimalListingUncheckedUpdateWithoutApplicationsInput>
    create: XOR<AnimalListingCreateWithoutApplicationsInput, AnimalListingUncheckedCreateWithoutApplicationsInput>
    where?: AnimalListingWhereInput
  }

  export type AnimalListingUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: AnimalListingWhereInput
    data: XOR<AnimalListingUpdateWithoutApplicationsInput, AnimalListingUncheckedUpdateWithoutApplicationsInput>
  }

  export type AnimalListingUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    owner?: UserUpdateOneRequiredWithoutAnimalListingsNestedInput
  }

  export type AnimalListingUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutAdoptionApplicationsInput = {
    update: XOR<UserUpdateWithoutAdoptionApplicationsInput, UserUncheckedUpdateWithoutAdoptionApplicationsInput>
    create: XOR<UserCreateWithoutAdoptionApplicationsInput, UserUncheckedCreateWithoutAdoptionApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdoptionApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdoptionApplicationsInput, UserUncheckedUpdateWithoutAdoptionApplicationsInput>
  }

  export type UserUpdateWithoutAdoptionApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUpdateManyWithoutOwnerNestedInput
    reviewedApplications?: AdoptionApplicationUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAdoptionApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput
    reviewedApplications?: AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutReviewedApplicationsInput = {
    update: XOR<UserUpdateWithoutReviewedApplicationsInput, UserUncheckedUpdateWithoutReviewedApplicationsInput>
    create: XOR<UserCreateWithoutReviewedApplicationsInput, UserUncheckedCreateWithoutReviewedApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedApplicationsInput, UserUncheckedUpdateWithoutReviewedApplicationsInput>
  }

  export type UserUpdateWithoutReviewedApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUpdateManyWithoutApplicantNestedInput
    auditLogs?: AuditLogUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutActorNestedInput
    supportConversations?: SupportConversationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationCreateNestedManyWithoutReviewerInput
    supportConversations?: SupportConversationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuditLogsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingUncheckedCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput
    supportConversations?: SupportConversationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuditLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
  }

  export type UserUpsertWithoutAuditLogsInput = {
    update: XOR<UserUpdateWithoutAuditLogsInput, UserUncheckedUpdateWithoutAuditLogsInput>
    create: XOR<UserCreateWithoutAuditLogsInput, UserUncheckedCreateWithoutAuditLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditLogsInput, UserUncheckedUpdateWithoutAuditLogsInput>
  }

  export type UserUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUpdateManyWithoutReviewerNestedInput
    supportConversations?: SupportConversationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput
    supportConversations?: SupportConversationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSupportConversationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogCreateNestedManyWithoutActorInput
  }

  export type UserUncheckedCreateWithoutSupportConversationsInput = {
    id?: string
    name: string
    email: string
    passwordHash?: string | null
    role?: string
    profileCompleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    animalListings?: AnimalListingUncheckedCreateNestedManyWithoutOwnerInput
    adoptionApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutApplicantInput
    reviewedApplications?: AdoptionApplicationUncheckedCreateNestedManyWithoutReviewerInput
    auditLogs?: AuditLogUncheckedCreateNestedManyWithoutActorInput
  }

  export type UserCreateOrConnectWithoutSupportConversationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSupportConversationsInput, UserUncheckedCreateWithoutSupportConversationsInput>
  }

  export type UserUpsertWithoutSupportConversationsInput = {
    update: XOR<UserUpdateWithoutSupportConversationsInput, UserUncheckedUpdateWithoutSupportConversationsInput>
    create: XOR<UserCreateWithoutSupportConversationsInput, UserUncheckedCreateWithoutSupportConversationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSupportConversationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSupportConversationsInput, UserUncheckedUpdateWithoutSupportConversationsInput>
  }

  export type UserUpdateWithoutSupportConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUpdateManyWithoutActorNestedInput
  }

  export type UserUncheckedUpdateWithoutSupportConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    profileCompleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    animalListings?: AnimalListingUncheckedUpdateManyWithoutOwnerNestedInput
    adoptionApplications?: AdoptionApplicationUncheckedUpdateManyWithoutApplicantNestedInput
    reviewedApplications?: AdoptionApplicationUncheckedUpdateManyWithoutReviewerNestedInput
    auditLogs?: AuditLogUncheckedUpdateManyWithoutActorNestedInput
  }

  export type AnimalListingCreateManyOwnerInput = {
    id?: string
    species: string
    breed?: string | null
    ageEstimate?: number | null
    gender?: string | null
    spayedNeutered?: boolean
    description?: string | null
    location: string
    photos: string
    healthStatus?: string | null
    vaccinationRecords?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdoptionApplicationCreateManyApplicantInput = {
    id?: string
    listingId: string
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationCreateManyReviewerInput = {
    id?: string
    listingId: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
  }

  export type AuditLogCreateManyActorInput = {
    id?: string
    action: string
    targetType: string
    targetId: string
    timestamp?: Date | string
    notes?: string | null
  }

  export type SupportConversationCreateManyUserInput = {
    id?: string
    messages: string
    status?: string
    createdAt?: Date | string
    resolvedAt?: Date | string | null
  }

  export type AnimalListingUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: AdoptionApplicationUpdateManyWithoutListingNestedInput
  }

  export type AnimalListingUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: AdoptionApplicationUncheckedUpdateManyWithoutListingNestedInput
  }

  export type AnimalListingUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    species?: StringFieldUpdateOperationsInput | string
    breed?: NullableStringFieldUpdateOperationsInput | string | null
    ageEstimate?: NullableIntFieldUpdateOperationsInput | number | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    spayedNeutered?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    photos?: StringFieldUpdateOperationsInput | string
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    vaccinationRecords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdoptionApplicationUpdateWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: AnimalListingUpdateOneRequiredWithoutApplicationsNestedInput
    reviewer?: UserUpdateOneWithoutReviewedApplicationsNestedInput
  }

  export type AdoptionApplicationUncheckedUpdateWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutApplicantInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    listing?: AnimalListingUpdateOneRequiredWithoutApplicationsNestedInput
    applicant?: UserUpdateOneWithoutAdoptionApplicationsNestedInput
  }

  export type AdoptionApplicationUncheckedUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogUpdateWithoutActorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogUncheckedUpdateWithoutActorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuditLogUncheckedUpdateManyWithoutActorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    targetType?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportConversationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SupportConversationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SupportConversationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    messages?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AdoptionApplicationCreateManyListingInput = {
    id?: string
    applicantId?: string | null
    answers: string
    status?: string
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewerId?: string | null
    reviewNotes?: string | null
  }

  export type AdoptionApplicationUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    applicant?: UserUpdateOneWithoutAdoptionApplicationsNestedInput
    reviewer?: UserUpdateOneWithoutReviewedApplicationsNestedInput
  }

  export type AdoptionApplicationUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdoptionApplicationUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicantId?: NullableStringFieldUpdateOperationsInput | string | null
    answers?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnimalListingCountOutputTypeDefaultArgs instead
     */
    export type AnimalListingCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AnimalListingCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnimalListingDefaultArgs instead
     */
    export type AnimalListingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AnimalListingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AdoptionApplicationDefaultArgs instead
     */
    export type AdoptionApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdoptionApplicationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SupportConversationDefaultArgs instead
     */
    export type SupportConversationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SupportConversationDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}